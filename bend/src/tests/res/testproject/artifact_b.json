{
  "type": "code",
  "name": "AFAssignRouteComponent.java",
  "body": "package edu.nd.dronology.ui.vaadin.activeflights;\n\nimport java.rmi.RemoteException;\nimport java.util.ArrayList;\nimport java.util.Collection;\n\nimport org.vaadin.teemu.switchui.Switch;\n\nimport com.vaadin.icons.VaadinIcons;\nimport com.vaadin.ui.Alignment;\nimport com.vaadin.ui.Button;\nimport com.vaadin.ui.Component;\nimport com.vaadin.ui.CustomComponent;\nimport com.vaadin.ui.HorizontalLayout;\nimport com.vaadin.ui.Image;\nimport com.vaadin.ui.Label;\nimport com.vaadin.ui.Notification;\nimport com.vaadin.ui.Notification.Type;\nimport com.vaadin.ui.Panel;\nimport com.vaadin.ui.VerticalLayout;\nimport com.vaadin.ui.themes.ValoTheme;\n\nimport edu.nd.dronology.services.core.info.FlightInfo;\nimport edu.nd.dronology.services.core.info.FlightRouteInfo;\nimport edu.nd.dronology.services.core.remote.IFlightManagerRemoteService;\nimport edu.nd.dronology.services.core.remote.IFlightRouteplanningRemoteService;\nimport edu.nd.dronology.services.core.util.DronologyServiceException;\nimport edu.nd.dronology.ui.vaadin.activeflights.AFDragLayout.WrappedComponent;\nimport edu.nd.dronology.ui.vaadin.connector.BaseServiceProvider;\nimport edu.nd.dronology.ui.vaadin.flightroutes.FRInfoBox;\nimport edu.nd.dronology.ui.vaadin.flightroutes.FRMainLayout;\nimport edu.nd.dronology.ui.vaadin.start.MyUI;\nimport edu.nd.dronology.ui.vaadin.utils.ImageProvider;\nimport edu.nd.dronology.ui.vaadin.utils.StyleConstants;\nimport net.mv.logging.ILogger;\nimport net.mv.logging.LoggerProvider;\n\n/**\n * This is the UI for assigning new routes to a UAV\n * \n * @author Patrick Falvey\n *  \n */ \n\npublic class AFAssignRouteComponent extends CustomComponent {\n\n\t/**\n\t * \n\t */\n\tprivate static final long serialVersionUID = -3476532205257979147L;\n\n\tprivate static final ILogger LOGGER = LoggerProvider.getLogger(AFAssignRouteComponent.class);\n\n\tprivate VerticalLayout content = new VerticalLayout();\n\tprivate HorizontalLayout topContent = new HorizontalLayout();\n\tprivate HorizontalLayout sideContent = new HorizontalLayout();\n\tprivate HorizontalLayout bottomButtons = new HorizontalLayout();\n\tprivate VerticalLayout sideButtons = new VerticalLayout(); \n\tprivate AFDragLayout panelContent;\n\tprivate FRMainLayout frLayout = new FRMainLayout();\n\tprivate Panel sidePanel = new Panel();\n\tprivate Button cancel = new Button(\"Cancel\");\n\tprivate Button apply = new Button(\"Apply\");\n\tprivate Button left = new Button(\"<\");\n\tprivate Button right = new Button(\">\");\n\tprivate int numRoutes = 0;\n\tprivate Switch hoverSwitch = new Switch();\n\tprivate Button returnToHome = new Button(\"Return to Home\");\n\tprivate int index = -1;\n\tprivate int boxID = 0;\n\n\tprivate BaseServiceProvider provider = MyUI.getProvider();\n\tprivate IFlightManagerRemoteService flightRouteService;\n\tprivate FlightInfo flightRouteInfo = null;\n\tprivate IFlightRouteplanningRemoteService flightInfoService;\n\n\tprivate Image droneImage;\n\tprivate UAVStatusWrapper uavStatus;\n\n\tpublic AFAssignRouteComponent(UAVStatusWrapper uavStatus) {\n\t\tthis.uavStatus = uavStatus;\n\t}\n\n\tpublic void createContents() {\n\t\tthis.addStyleName(StyleConstants.AF_ASSING_ROUTE);\n\t\ttopContent.addStyleName(StyleConstants.AF_ASSING_ROUTE_TOP_CONTENT);\n\t\tsideContent.addStyleName(StyleConstants.AF_ASSING_ROUTE_MIDDLE_CONTENT);\n\t\tbottomButtons.addStyleName(StyleConstants.AF_ASSING_ROUTE_BOTTOM_CONTENT);\n\n\t\tpanelContent = new AFDragLayout(uavStatus.getName());\n\n\t\tdroneImage = ImageProvider.getDefaultUAVImage();\n\t\tVerticalLayout statusContent = new VerticalLayout();\n\n\t\tcreateStatusPannel(statusContent);\n\n\t\ttry {\n\t\t\tflightRouteService = (IFlightManagerRemoteService) provider.getRemoteManager()\n\t\t\t\t\t.getService(IFlightManagerRemoteService.class);\n\t\t\tflightRouteInfo = flightRouteService.getFlightInfo(uavStatus.getName());\n\t\t} catch (RemoteException e) {\n\t\t\tMyUI.setConnected(false);\n\t\t\tLOGGER.error(e);\n\t\t} catch (Exception e) {\n\t\t\tLOGGER.error(e);\n\t\t}\n\n\t\tnumRoutes = flightRouteInfo.getPendingFlights().size();\n\n\t\tcreateSidePannel(sidePanel);\n\n\t\tbottomButtons.addComponents(cancel, apply);\n\t\tapply.addStyleName(\"btn-okay\");\n\t\tcontent.addComponents(topContent, sideContent, bottomButtons);\n\n\t\tsetCompositionRoot(content);\n\n\t}\n\n\tprivate void createSidePannel(Panel sidePanel) {\n\t\tsidePanel.addStyleName(\"fr_info_panel\");\n\t\tsidePanel.addStyleName(\"control_panel\");\n\t\tsidePanel.setCaption(numRoutes + \" Routes Assigned\");\n\t\tapply.setEnabled(true); \n\n\t\tsideButtons.addComponents(left, right);\n\t\tsideButtons.setComponentAlignment(left, Alignment.MIDDLE_CENTER);\n\t\tsideButtons.setComponentAlignment(right, Alignment.MIDDLE_CENTER);\n\n\t\t// when adding a route to be assigned\n\t\tleft.addClickListener(e -> {\n\t\t\tif (frLayout.getControls().getInfoPanel().getHighlightedFRInfoBox() != null) {\n\t\t\t\tFlightRouteInfo selectedFlight = frLayout.getControls().getInfoPanel().getHighlightedFRInfoBox()\n\t\t\t\t\t\t.getFlightRouteInfo();\n\t\t\t\tif (selectedFlight.getWaypoints().size() < 1) {\n\t\t\t\t\tNotification.show(\"There is no waypoint defined in \" + selectedFlight.getName()\n\t\t\t\t\t\t\t+ \". You cannot assign an empty route to a UAV.\");\n\t\t\t\t} else {\n\t\t\t\t\taddRoute(selectedFlight);\n\t\t\t\t}\n\t\t\t} else\n\t\t\t\tNotification.show(\"Please select route to assign.\");\n\t\t});\n\n\t\t// when removing a route from the assigned list\n\t\tright.addClickListener(e -> {\n\t\t\tif (index != -1) {\n\t\t\t\tremoveRoute(this.index);\n\t\t\t\tthis.index = -1;\n\t\t\t} else\n\t\t\t\tNotification.show(\"Please select assigned route to remove.\");\n\t\t});\n\n\t\t// when clicking on a route, focus the box and show the route on the map on the right\n\t\tpanelContent.getSortableLayout().getVerticalLayout().addLayoutClickListener(e -> {\n\t\t\tWrappedComponent child = (WrappedComponent) e.getChildComponent();\n\t\t\tComponent childContent = child.getContent();\n\t\t\tif (panelContent.getComponentIndex(childContent) != -1) {\n\t\t\t\t((FRInfoBox) childContent).addStyleName(\"info_box_focus\");\n\t\t\t\tfrLayout.switchRoute(((FRInfoBox) childContent));\n\t\t\t}\n\t\t\tindex = panelContent.getComponentIndex(childContent);\n\n\t\t\tint numComponents = panelContent.getComponentCount();\n\n\t\t\t// when one route is clicked, the others go back to default background color\n\t\t\tfor (int i = 0; i < numComponents; i++) {\n\t\t\t\tif (i != index) {\n\t\t\t\t\tpanelContent.getComponent(i).removeStyleName(\"info_box_focus\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\t// be able to add a route to the left with a double click\n\t\tfrLayout.getControls().getInfoPanel().getRoutes().addLayoutClickListener(e -> {\n\t\t\tif (e.isDoubleClick()) {\t\n\t\t\t\tif (frLayout.getControls().getInfoPanel().getHighlightedFRInfoBox() != null) {\n\t\t\t\t\tFlightRouteInfo selectedFlight = frLayout.getControls().getInfoPanel().getHighlightedFRInfoBox().getFlightRouteInfo();\n\t\t\t\t\tif (selectedFlight.getWaypoints().size() < 1) {\n\t\t\t\t\t\tNotification.show(\"There is no waypoint defined in \" + selectedFlight.getName()\n\t\t\t\t\t\t\t\t+ \". You cannot assign an empty route to a UAV.\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddRoute(selectedFlight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse Notification.show(\"Please select route to assign.\");\n\t\t\t}\n\t\t});\n\t\t\n\t\t// be able to add a route to the right with a double click\n\t\tpanelContent.getSortableLayout().getVerticalLayout().addLayoutClickListener(e -> {\n\t\t\tif (e.isDoubleClick()) {\n\t\t\t\tif (index != -1) {\n\t\t\t\t\tremoveRoute(this.index);\n\t\t\t\t\tthis.index = -1;\n\t\t\t\t} else\n\t\t\t\t\tNotification.show(\"Please select assigned route to remove.\");\n\t\t\t}\n\t\t});\n\t\n\t\t\n\t\t\n\t\tsidePanel.setContent(panelContent);\n\t\tsideContent.addComponents(sidePanel, sideButtons, frLayout);\n\n\t}\n\n\tprivate void createStatusPannel(VerticalLayout statusContent) {\n\n\t\tLabel statusInfo1 = new Label();\n\t\tLabel statusInfo2 = new Label();\n\t\tLabel statusInfo3 = new Label();\n\n\t\tstatusInfo1.setValue(\"Assigning Routes for \" + uavStatus.getName());\n\t\tstatusInfo1.addStyleName(\"info_box_name\");\n\t\tstatusInfo1.addStyleName(ValoTheme.LABEL_BOLD);\n\t\tstatusInfo2.setValue(\"Status: \" + uavStatus.getStatus());\n\n\t\tstatusInfo3.setValue(\"Battery Life: \" + uavStatus.getBatteryLife() + \" %\");\n\t\tstatusContent.addComponents(statusInfo1, statusInfo2, statusInfo3);\n\t\tstatusContent.setSpacing(false);\n\t\tLabel health = new Label();\n\t\thealth.setCaptionAsHtml(true);\n\t\thealth.setCaption(\"<span style=\\'color: \" + uavStatus.getHealthColor() + \" !important;\\'> \"\n\t\t\t\t+ VaadinIcons.CIRCLE.getHtml() + \"</span>\");\n\t\tif (uavStatus.getHealthColor().equals(\"green\"))\n\t\t\thealth.setDescription(\"Normally Functionable\");\n\t\telse if (uavStatus.getHealthColor().equals(\"yellow\"))\n\t\t\thealth.setDescription(\"Needs Attention\");\n\t\telse if (uavStatus.getHealthColor().equals(\"red\"))\n\t\t\thealth.setDescription(\"Needs Immediate Attention\");\n\n\t\ttopContent.addComponents(droneImage, statusContent, health);\n\t\ttopContent.setSpacing(false);\n\n\t\tVerticalLayout coordinates = new VerticalLayout();\n\t\tVerticalLayout altAndSpeed = new VerticalLayout();\n\t\tHorizontalLayout positionInfo = new HorizontalLayout();\n\n\t\tLabel locationInfo1 = new Label();\n\t\tLabel locationInfo2 = new Label();\n\t\tLabel locationInfo3 = new Label();\n\t\tLabel locationInfo4 = new Label();\n\n\t\tlocationInfo1.setValue(\"Latitude:\\t\" + uavStatus.getLatitude());\n\t\tlocationInfo2.setValue(\"Longitude:\\t\" + uavStatus.getLongitude());\n\t\tlocationInfo3.setValue(\"Altitude:\\t\" + uavStatus.getAltitude() + \" meters\");\n\n\t\tlocationInfo4.setValue(\"Ground Speed:\\t\" + uavStatus.getSpeed() + \" m/s\");\n\n\t\tcoordinates.addComponents(locationInfo1, locationInfo2);\n\t\taltAndSpeed.addComponents(locationInfo3, locationInfo4);\n\t\tpositionInfo.addComponents(coordinates, altAndSpeed);\n\n\t\ttopContent.addComponent(positionInfo);\n\n\t\tVerticalLayout buttons = new VerticalLayout();\n\n\t\tHorizontalLayout bottomSwitch = new HorizontalLayout();\n\t\tLabel caption = new Label(\"Hover in Place\");\n\t\tbottomSwitch.addComponents(caption, hoverSwitch);\n\n\t\tbuttons.addComponents(bottomSwitch, returnToHome);\n\n\t\ttopContent.addComponent(buttons);\n\n\t}\n\n\t/**\n\t * \n\t * @return in-order list of flight routes to be assigned to the UAV based on the order in the AFDragLayout\n\t */\n\tpublic Collection<FlightRouteInfo> getRoutesToAssign() {\n\t\tCollection<FlightRouteInfo> current = new ArrayList<>();\n\t\tCollection<FlightRouteInfo> items = null;\n\t\ttry {\n\t\t\tflightInfoService = (IFlightRouteplanningRemoteService) provider.getRemoteManager()\n\t\t\t\t\t.getService(IFlightRouteplanningRemoteService.class);\n\t\t\titems = flightInfoService.getItems();\n\t\t} catch (RemoteException | DronologyServiceException e) {\n\t\t\tMyUI.setConnected(false);\n\t\t\tLOGGER.error(e);\n\t\t}\n\n\t\tfor (int i = 0; i < panelContent.getComponentCount(); i++) {\n\t\t\tFRInfoBox box = (FRInfoBox) panelContent.getComponent(i);\n\t\t\tfor (FlightRouteInfo info : items) {\n\t\t\t\tif (box.getName().equals(info.getName())) {\n\t\t\t\t\tcurrent.add(info);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn current;\n\t}\n\n\tpublic void addRoute(FlightRouteInfo routeInfo) {\n\t\tFRInfoBox box = new FRInfoBox(routeInfo);\n\t\tbox.setId(Integer.toString(this.boxID));\n\t\tpanelContent.addNewComponent(box);\n\t\tnumRoutes += 1;\n\t\tsidePanel.setCaption(numRoutes + \" Routes Assigned\");\n\t}\n\n\t/**\n\t * removes a route from the AFDragLayout\n\t * \n\t * @param index\n\t */\n\tpublic void removeRoute(int index) {\n\t\tpanelContent.removeComponent(panelContent.getComponent(index));\n\t\tnumRoutes -= 1;\n\t\tsidePanel.setCaption(numRoutes + \" Routes Assigned\");\n\t}\n\n\tpublic Button getCancel() {\n\t\treturn cancel;\n\t} \n\n\tpublic Button getApply() {\n\t\treturn apply;\n\t}\n\n\tpublic Button getReturnToHome() {\n\t\treturn returnToHome;\n\t}\n\n\tpublic Switch getHover() {\n\t\treturn hoverSwitch;\n\t}\n\n}"
}