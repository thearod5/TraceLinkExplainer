{
  "entries": [
    {
      "issueid": "DD-768",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UAV Configuration Command Types",
        "description": "Each movement command shall specify one of the following command types: including SET MONITORING FREQUENCY and SET STATE FREQUENCY"
      },
      "children": {
        "refinedby": [
          "DD-727",
          "DD-728"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/CommandIds.java",
          "timestamp": "2018-05-08T23:05:56Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetMonitoringFrequencyCommand.java",
          "timestamp": "2018-05-08T23:05:56Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetStateFrequencyCommand.java",
          "timestamp": "2018-05-08T23:05:56Z"
        }
      ]
    },
    {
      "issueid": "DD-767",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Modify existing Routes",
        "description": "The RouteCreationUI shall provide capabilities to modify existing routes."
      },
      "children": {
        "subtasks": [
          "ST-210",
          "ST-347"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FREditModeController.java",
          "timestamp": "2018-05-11T02:43:21Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2018-05-11T02:43:21Z"
        }
      ]
    },
    {
      "issueid": "RE-766",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Multiple Map Types",
        "description": "The MapComponent shall support different types of map layers (e.g.  terrain  satellite)"
      },
      "children": {
        "refinedby": [
          "DD-439"
        ]
      },
      "code": []
    },
    {
      "issueid": "CO-765",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "UI Maps",
        "description": "Provides map functionality for displaying routes and UAVs, leveraging off-the-shelf map providers (such as OSM and google maps).   "
      },
      "children": {
        "contains": [
          "DD-439",
          "RE-766"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-764",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UI middleware forwards resend waypoint commands from clients to dronology",
        "description": "The UIMiddleware accepts resend waypoint commands associated with a unique UAV ID and forwards to Dronology"
      },
      "children": {
        "subtasks": [
          "ST-497"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/DroneSetupService.java",
          "timestamp": "2018-05-08T17:14:22Z"
        }
      ]
    },
    {
      "issueid": "DD-763",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UAV ModeChangeMessages",
        "description": "UAV State messages shall be formatted as JSON objects and contain the UAV ID and the MODE"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/messages/UAVModeChangeMessage.java",
          "timestamp": "2018-05-08T18:30:59Z"
        }
      ]
    },
    {
      "issueid": "DD-762",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Route Name",
        "description": "If a user attempts to create a route without providing a name then the system shall not save the route."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-761",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Display assigned routes",
        "description": "The display of active flight plans shall include time in flight,  traveled distance,  remaining distance,  completed and total waypoints."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-760",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Display assigned routes",
        "description": "The active flight plan shall be displayed at the top of the list of pending flight plans."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "RE-759",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Mission Planning",
        "description": "The MissionPlanner shall execute flight plans for multiple UAVs concurrently."
      },
      "children": {
        "refinedby": [
          "DD-362",
          "DD-468",
          "DD-498",
          "DD-536",
          "DD-537",
          "DD-538",
          "DD-540"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-757",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "UAV properties",
        "description": "The properties that the GCS sends to the GCSMiddleware shall be defined in JSON"
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-756",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "GCS transmits UAV properties",
        "description": "The GCS shall send the UAVs current properties to the GCSMiddleware when they are received from the UAV."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/control.py",
          "timestamp": "2018-05-09T19:22:04Z"
        }
      ]
    },
    {
      "issueid": "DD-755",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "GCS transmits monitoring messages",
        "description": "The GCS requests the UAVs properties every UAV MESSAGE MONITORING FREQUENCY seconds."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/communication/message.py",
          "timestamp": "2018-05-09T19:22:30Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/vehicle/copter.py",
          "timestamp": "2018-05-09T19:22:30Z"
        }
      ]
    },
    {
      "issueid": "RE-754",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "GCS transmits UAV monitoring data",
        "description": "The GCS shall transmit the  UAVs properties to the GCSMiddleware"
      },
      "children": {
        "refinedby": [
          "DD-755",
          "DD-756",
          "DD-757"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-753",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "GCS forwards UAV coordinates to Middleware",
        "description": "The GCS shall send the UAVs current coordinates to the GCSMiddleware when they are received from the UAV."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/control.py",
          "timestamp": "2018-05-09T19:21:34Z"
        }
      ]
    },
    {
      "issueid": "DD-752",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Frequency of UAV coordinates requests",
        "description": "The GCS requests the UAVs current coordinates every UAV MESSAGE STATE FREQUENCY seconds."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/communication/message.py",
          "timestamp": "2018-05-09T19:21:18Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/vehicle/copter.py",
          "timestamp": "2018-05-09T19:21:18Z"
        }
      ]
    },
    {
      "issueid": "RE-751",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "GCS transmits UAV coordinates",
        "description": "The GCS shall transmit the UAVs current location to the GCSMiddleware"
      },
      "children": {
        "refinedby": [
          "DD-752",
          "DD-753"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-750",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Notify Dronology on connection timeout",
        "description": "After UAV RECONNECT TIMEOUT has been reached,  if connection to the UAV can not be reestablished, the GCS shall send a UAV Timeout message containing the UAV ID to the GCSMiddleware."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-749",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Notify Dronology on lost connection",
        "description": "If the connection to an UAV is lost and the GCS fails to reconnect, the GCS shall notify the GCSMiddleware."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-748",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Close connection if incorrect UAV registration",
        "description": "If the GCS receives notification that the UAV is incorrectly registered, then the GCS closes the connection with the UAV."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-747",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Notify GCSMiddleware upon UAV Activation",
        "description": "The GCS shall send the home location, a time stamp, and the UAV ID to the GCSMiddleware."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/communication/message.py",
          "timestamp": "2018-05-09T19:19:48Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/vehicle/copter.py",
          "timestamp": "2018-05-09T19:19:48Z"
        }
      ]
    },
    {
      "issueid": "RE-746",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "UAV Activation notification",
        "description": "The GCS shall report newly connected UAVs to the GCSMiddleware."
      },
      "children": {
        "refinedby": [
          "DD-747",
          "DD-748"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-745",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Adjust message frequency upon command",
        "description": "When the GCS receives a set frequency command from the GCSMiddleware, it shall adjust its message frequency accordingly."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/communication/command.py",
          "timestamp": "2018-05-09T19:19:01Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/control.py",
          "timestamp": "2018-05-09T19:19:01Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/vehicle/  init  .py",
          "timestamp": "2018-05-09T19:19:01Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/vehicle/copter.py",
          "timestamp": "2018-05-09T19:19:01Z"
        }
      ]
    },
    {
      "issueid": "DD-744",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Message frequency units",
        "description": "Message frequency shall be defined in units of seconds."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/vehicle/  init  .py",
          "timestamp": "2018-05-09T19:17:46Z"
        }
      ]
    },
    {
      "issueid": "DD-743",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Default message frequency",
        "description": "The default message frequency for UAV state messages shall be UAV MESSAGE STATE FREQUENCY"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/vehicle/  init  .py",
          "timestamp": "2018-05-09T19:15:28Z"
        }
      ]
    },
    {
      "issueid": "DD-742",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Monitoring Message frequency",
        "description": "The default message frequency for UAV monitoring messages shall be UAV MESSAGE MON FREQUENCY"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/vehicle/  init  .py",
          "timestamp": "2018-05-09T19:15:28Z"
        }
      ]
    },
    {
      "issueid": "RE-741",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Message frequency assignment",
        "description": "The GCS shall assign a message frequency for all UAVs."
      },
      "children": {
        "refinedby": [
          "DD-742",
          "DD-743",
          "DD-744",
          "DD-745"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-740",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Forward commands to UAV",
        "description": "The GCS shall transform commands into a vehicle specific format."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/communication/command.py",
          "timestamp": "2018-05-09T19:12:41Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/control.py",
          "timestamp": "2018-05-09T19:12:41Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "python/edu.nd.dronology.gstation1.python/src/vehicle/copter.py",
          "timestamp": "2018-05-09T19:12:41Z"
        }
      ]
    },
    {
      "issueid": "RE-739",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Forward commands to UAV",
        "description": "When the GCS receives a UAV command from the GCSMiddleware, the GCS shall forward the command to the respective UAV."
      },
      "children": {
        "refinedby": [
          "DD-740"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-737",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Connection lost",
        "description": "When a socket error or time-out occurs, all UAVs associated with the GCS shall be deactivated."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/DroneFleetManager.java",
          "timestamp": "2018-05-08T23:59:15Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/GroundstationConnector.java",
          "timestamp": "2018-05-08T23:59:15Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/DispatchQueueManager.java",
          "timestamp": "2018-05-08T23:59:15Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/ReadDispatcher.java",
          "timestamp": "2018-05-08T23:59:15Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/service/connector/DroneConnectorService.java",
          "timestamp": "2018-05-08T23:59:15Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/service/connector/DroneConnectorServiceInstance.java",
          "timestamp": "2018-05-08T23:59:15Z"
        }
      ]
    },
    {
      "issueid": "RE-736",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Connection lost",
        "description": "When the connection to the GCS from the GCSMiddleware is lost, the GCSMiddleware shall notify Dronology and deactivate all associated UAVs."
      },
      "children": {
        "refinedby": [
          "DD-737"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-735",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UAV Takeoff Command",
        "description": "The TAKEOFF command shall specify the target altitude"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/TakeoffCommand.java",
          "timestamp": "2018-05-08T18:22:56Z"
        }
      ]
    },
    {
      "issueid": "DD-734",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UAV SetVelocity Command",
        "description": "The SET VELOCITY shall specify a velocity vector specified using NED (North  East  Down) directions."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetVelocityCommand.java",
          "timestamp": "2018-05-08T18:22:23Z"
        }
      ]
    },
    {
      "issueid": "DD-733",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UAV SetGroundspeed Command",
        "description": "The SET GROUNDSPEED command shall specify ground speed in meters per second."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetGroundSpeedCommand.java",
          "timestamp": "2018-05-08T18:21:58Z"
        }
      ]
    },
    {
      "issueid": "DD-732",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UAV Goto Command",
        "description": "The GOTO WAYPOINT command shall include a target latitude, longitude, and altitude coordinate"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/GoToCommand.java",
          "timestamp": "2018-05-08T18:21:41Z"
        }
      ]
    },
    {
      "issueid": "DD-731",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UAV Movement Command Types",
        "description": "Each movement command shall specify one of the following command types:including GOTO WAYPOINT, SET GROUNDSPEED, SET VELOCITY, TAKEOFF,  LAND, and HOVER"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/CommandIds.java",
          "timestamp": "2018-05-08T18:20:50Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/EmergencyStopCommand.java",
          "timestamp": "2018-05-08T18:20:50Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/GoToCommand.java",
          "timestamp": "2018-05-08T18:20:50Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/IDroneCommand.java",
          "timestamp": "2018-05-08T18:20:50Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/LandCommand.java",
          "timestamp": "2018-05-08T18:20:50Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetGroundSpeedCommand.java",
          "timestamp": "2018-05-08T18:20:50Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetVelocityCommand.java",
          "timestamp": "2018-05-08T18:20:50Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/TakeoffCommand.java",
          "timestamp": "2018-05-08T18:20:50Z"
        }
      ]
    },
    {
      "issueid": "DD-730",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UAV Command ID",
        "description": "Each command shall include a unique UAV ID"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/AbstractDroneCommand.java",
          "timestamp": "2018-05-08T18:11:24Z"
        }
      ]
    },
    {
      "issueid": "RE-729",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "UAV Commands",
        "description": "The GCSMiddleware shall forward commands sent from Dronology to a GCS"
      },
      "children": {
        "refinedby": [
          "DD-727",
          "DD-728",
          "DD-730",
          "DD-731",
          "DD-732",
          "DD-733",
          "DD-734",
          "DD-735",
          "DD-768"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-728",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UAV Set State Message Frequency Command",
        "description": "The GCSMiddleware shall be able to handle and send a setStateFrequency command to the respective GCS containing the desired Frequency in ms."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetStateFrequencyCommand.java",
          "timestamp": "2018-05-08T18:08:24Z"
        }
      ]
    },
    {
      "issueid": "DD-727",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UAV Set Monitoring Frequency Command",
        "description": "The GCSMiddleware shall be able to handle and send a setMonitoringFrequency command to the respective GCS containing the desired Frequency in ms."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetMonitoringFrequencyCommand.java",
          "timestamp": "2018-05-08T18:07:33Z"
        }
      ]
    },
    {
      "issueid": "DD-724",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UAV State Messages",
        "description": "UAV State messages shall be formatted as JSON objects and contain both mandatory and optional elements."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/messages/UAVMessageFactory.java",
          "timestamp": "2018-05-08T18:04:22Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/messages/UAVStateMessage.java",
          "timestamp": "2018-05-08T18:04:22Z"
        }
      ]
    },
    {
      "issueid": "DD-723",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UAV Monitoring Messages",
        "description": "UAV Monitoring messages shall be formatted as JSON objects and contain arbitrary information regarding a single UAV."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/messages/UAVMessageFactory.java",
          "timestamp": "2018-05-08T18:03:42Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/messages/UAVMonitoringMessage.java",
          "timestamp": "2018-05-08T18:03:42Z"
        }
      ]
    },
    {
      "issueid": "RE-722",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "UAV Messages",
        "description": "The GCSMiddleware shall handle state messages, monitoring messages, and mode change messages  received from an GCS."
      },
      "children": {
        "refinedby": [
          "DD-723",
          "DD-724",
          "DD-763"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-721",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Activation request denied",
        "description": "When the activation request is denie, the GCSMiddleware shall send a predefined activation denied message to the GCS."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-720",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Activation request approved",
        "description": "When the activation request is approved, the GCSMiddleware shall send a predefined activation confirmation message to the GCS."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-719",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Activation request results",
        "description": "The GCS shall be informed of the result of the activation request."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-718",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Activation of an additional UAV detected by the GCS",
        "description": "The GCSMiddleware shall call the UAVActivationManager to request UAV activation."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/AbstractDroneFleetFactory.java",
          "timestamp": "2018-05-08T23:55:52Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/PhysicalDroneFleetFactory.java",
          "timestamp": "2018-05-08T23:55:52Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/VirtualDroneFleetFactory.java",
          "timestamp": "2018-05-08T23:55:52Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/DispatchQueueManager.java",
          "timestamp": "2018-05-08T23:55:52Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/info/DroneInitializationInfo.java",
          "timestamp": "2018-05-08T23:55:52Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/DroneSetupService.java",
          "timestamp": "2018-05-08T23:55:52Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/DroneSetupServiceInstance.java",
          "timestamp": "2018-05-08T23:55:52Z"
        }
      ]
    },
    {
      "issueid": "DD-716",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "GCS UAV announcement",
        "description": "In step three, the GCS announces its current set of recognized UAVs to the GCSMiddleware."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/ReadDispatcher.java",
          "timestamp": "2018-05-08T23:53:47Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/messages/UAVHandshakeMessage.java",
          "timestamp": "2018-05-08T23:53:47Z"
        }
      ]
    },
    {
      "issueid": "DD-715",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "GCS handshake",
        "description": "In step two, the GCSMiddleware accepts the connection and sends a handshake message."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/GroundstationConnector.java",
          "timestamp": "2018-05-08T23:52:34Z"
        }
      ]
    },
    {
      "issueid": "RE-714",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Groundstation-Middleware Communication Protocol",
        "description": "The GCSMiddleware shall follow a predefined set of steps to establish a connection between a GCS and Dronology"
      },
      "children": {
        "refinedby": [
          "DD-361",
          "DD-715",
          "DD-716"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-713",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Unique ID for each GCS",
        "description": "Each GCS connecting to the GCSMiddleware shall be identified through a unique GROUNDSTATION ID."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/GroundstationConnector.java",
          "timestamp": "2018-05-08T23:50:37Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/messages/ConnectionRequestMessage.java",
          "timestamp": "2018-05-08T23:50:37Z"
        }
      ]
    },
    {
      "issueid": "DD-712",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Only accept one connection per GCS",
        "description": "The GCSMiddleware shall only accept one connection for each GCS."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/RuntimeDroneTypes.java",
          "timestamp": "2018-05-08T23:49:11Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/GroundstationConnector.java",
          "timestamp": "2018-05-08T23:49:11Z"
        }
      ]
    },
    {
      "issueid": "DD-711",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Establish conneciton with GCT middleware",
        "description": "The GCSMiddleware shall accept connections with multiple GCS "
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/connect/IncommingGroundstationConnectionServer.java",
          "timestamp": "2018-05-08T23:44:49Z"
        }
      ]
    },
    {
      "issueid": "DD-710",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Initialize connection to GCS middleware",
        "description": "The GCSMiddleware shall specify a predefined GCS PORT where GCS can connect."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/connect/IncommingGroundstationConnectionServer.java",
          "timestamp": "2018-05-08T23:43:39Z"
        }
      ]
    },
    {
      "issueid": "RE-709",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Connect GCS to Dronology via Middleware",
        "description": "The GCSMiddleware shall handle multiple GCS"
      },
      "children": {
        "refinedby": [
          "DD-354",
          "DD-710",
          "DD-711",
          "DD-712",
          "DD-713"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-707",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Publishing of Monitoring Message",
        "description": "A monitoring message shall contain a (hierarchical) identifier describing the topic, a message type, a timestamp, and arbitrary serializeable data attached to the message"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/monitoring/ArtifactIdentifier.java",
          "timestamp": "2018-05-08T17:57:35Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/monitoring/IMonitorableMessage.java",
          "timestamp": "2018-05-08T17:57:35Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/monitoring/messages/UAVMonitorableMessage.java",
          "timestamp": "2018-05-08T17:57:35Z"
        }
      ]
    },
    {
      "issueid": "RE-706",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Publishing Monitoring Messages",
        "description": "The DronologyRuntimeMonitor shall be able to receive messages from any Dronology component"
      },
      "children": {
        "refinedby": [
          "DD-707"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-705",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Define groups of topics to monitor",
        "description": "The DronologyRuntimeMonitor shall provide means to define wildcards i.e.  a client receives messages from all topics associated with the wildcard"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/service/DroneMonitoringService.java",
          "timestamp": "2018-05-08T17:54:23Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/service/DroneMonitoringServiceRemoteFacade.java",
          "timestamp": "2018-05-08T17:54:23Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/service/IDroneMonitoringRemoteService.java",
          "timestamp": "2018-05-08T17:54:23Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/service/IDroneMonitoringServiceInstance.java",
          "timestamp": "2018-05-08T17:54:23Z"
        }
      ]
    },
    {
      "issueid": "DD-704",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Hierarchical organization of monitoring topics",
        "description": "Topics shall be organized in a hierarchical manner meaning that clients can subscribe to all messages from certain GCS  UAVS and properties"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/service/DroneMonitoringService.java",
          "timestamp": "2018-05-08T17:54:23Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/service/DroneMonitoringServiceRemoteFacade.java",
          "timestamp": "2018-05-08T17:54:23Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/service/IDroneMonitoringRemoteService.java",
          "timestamp": "2018-05-08T17:54:23Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/service/IDroneMonitoringServiceInstance.java",
          "timestamp": "2018-05-08T17:54:23Z"
        }
      ]
    },
    {
      "issueid": "DD-703",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Subscribe to monitoring topics",
        "description": "Clients shall be able to subscribe to any number of topics"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/service/DroneMonitoringService.java",
          "timestamp": "2018-05-08T17:54:23Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/service/DroneMonitoringServiceRemoteFacade.java",
          "timestamp": "2018-05-08T17:54:23Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/service/IDroneMonitoringRemoteService.java",
          "timestamp": "2018-05-08T17:54:23Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/service/IDroneMonitoringServiceInstance.java",
          "timestamp": "2018-05-08T17:54:23Z"
        }
      ]
    },
    {
      "issueid": "RE-702",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Forwarding of Monitoring Message",
        "description": "When a new monitoring message is received the DronologyRuntimeMonitor shall forward the message to all subscribed clients"
      },
      "children": {
        "refinedby": [
          "DD-703",
          "DD-704",
          "DD-705"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-701",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Monitoring Messages",
        "description": "The DronologyRuntimeMonitor shall provide functionality to retrieve monitoring messages and distribute them to clients"
      },
      "children": {
        "refinedby": [
          "DD-445"
        ]
      },
      "code": []
    },
    {
      "issueid": "CO-700",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "Runtime Monitoring",
        "description": "Provides basic data collection capabilities for internal data from Dronology (such as assigned flights) and data provided by the UAV (e.g.  location data and status)"
      },
      "children": {
        "contains": [
          "DD-445",
          "DD-703",
          "DD-704",
          "DD-705",
          "DD-707",
          "RE-701",
          "RE-702",
          "RE-706"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-699",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Emergency Battery Notification",
        "description": "When the  UAVs battery level drops below a predefined threshold  then the UAV health indicator is activated."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "RE-698",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Emergency Notification",
        "description": "The RealTimeFlightUI shall notify users when an emergency occurs."
      },
      "children": {
        "refinedby": [
          "DD-699"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-697",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Continual following UAVs",
        "description": "When UI follow mode is active, the map should continually zoom and pan so that all selected UAVs are centered and their active routes constitutes 60% of the view."
      },
      "children": {
        "subtasks": [
          "ST-357",
          "ST-358"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFFollowBar.java",
          "timestamp": "2018-05-10T21:47:38Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2018-05-10T21:47:38Z"
        }
      ]
    },
    {
      "issueid": "DD-696",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Initiating the follow mode",
        "description": "When UI follow mode is initiated, the map shall automatically zoom and pan so that all selected UAVs are centered and their active routes constitutes 60% of the view."
      },
      "children": {
        "subtasks": [
          "ST-403"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFFollowBar.java",
          "timestamp": "2018-05-10T23:38:54Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2018-05-10T23:38:54Z"
        }
      ]
    },
    {
      "issueid": "RE-695",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Following UAVs",
        "description": "The RealTimeFlightUI shall allow users to follow one or multiple UAVs on the map."
      },
      "children": {
        "refinedby": [
          "DD-696",
          "DD-697"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-694",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Applying emergency operations",
        "description": "When requested by the user, the UI shall apply the requested emergency action to all selected UAVs; if no UAV is selected, the UI shall apply the emergency action to all UAVs by default."
      },
      "children": {
        "subtasks": [
          "ST-208",
          "ST-218",
          "ST-282"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFEmergencyComponent.java",
          "timestamp": "2018-05-10T21:49:03Z"
        }
      ]
    },
    {
      "issueid": "RE-693",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Emergency operations",
        "description": "The RealTimeFlightUI shall allow users to perform emergency operations (e.g. hovering multiple UAVs, sending multiple UAVs to home) to a group of UAVs"
      },
      "children": {
        "refinedby": [
          "DD-694"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-692",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UAV Operations",
        "description": "Operations shall include RTL, takeoff,  hover-in-place, and resend command."
      },
      "children": {
        "subtasks": [
          "ST-305",
          "ST-444"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoBox.java",
          "timestamp": "2018-05-10T23:40:21Z"
        }
      ]
    },
    {
      "issueid": "RE-691",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "UAV Operations",
        "description": "The RealTimeFlightUI shall allow users to apply flight operations to one or more selected UAVs."
      },
      "children": {
        "refinedby": [
          "DD-692"
        ],
        "implements": [
          "DD-694"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-690",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Indicate route completion status",
        "description": "The UI shall differentiate between completed, current, and not yet traversed flight segments."
      },
      "children": {
        "subtasks": [
          "ST-247"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/MapDrawingUtil.java",
          "timestamp": "2018-05-10T23:42:55Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2018-05-10T23:42:55Z"
        }
      ]
    },
    {
      "issueid": "RE-689",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Display active routes",
        "description": "The RealTimeFlightUI shall display all currently active flight plans on the map."
      },
      "children": {
        "refinedby": [
          "DD-229",
          "DD-690"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-688",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Periodically update UAV location",
        "description": "The UI shall periodically request current locations of all registered UAVs from the UIMiddleware and update their locations on the map."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2018-05-08T17:49:56Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/MapDrawingUtil.java",
          "timestamp": "2018-05-08T17:49:56Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/start/MyUI.java",
          "timestamp": "2018-05-08T17:49:56Z"
        }
      ]
    },
    {
      "issueid": "DD-687",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UAV information and operations",
        "description": "For each activated UAV, the UI shall display information about that UAV (i.e. longitude, latitude, altitude, groud speed, and battery level  etc.) "
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoBox.java",
          "timestamp": "2018-05-08T17:45:49Z"
        }
      ]
    },
    {
      "issueid": "DD-686",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Differentiate UAV types",
        "description": "Different types of UAVs shall have different icons."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-685",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Display UAVs on map",
        "description": "When the map is loaded and the all active UAVs list is obtained the UIRealTimeFlightView shall display an icon on the map for each registered UAV based on its current location."
      },
      "children": {
        "subtasks": [
          "ST-224",
          "ST-304",
          "ST-428"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2018-05-10T23:48:46Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/MapDrawingUtil.java",
          "timestamp": "2018-05-10T23:48:46Z"
        }
      ]
    },
    {
      "issueid": "DD-684",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Display map in UI",
        "description": "When the RealTimeFlightUI is loaded, a map shall be displayed with the default zoom level and center coordinates specified in a configuration file."
      },
      "children": {
        "subtasks": [
          "ST-280"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMainLayout.java",
          "timestamp": "2018-05-10T23:51:21Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2018-05-10T23:51:21Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/map/LeafletmapFactory.java",
          "timestamp": "2018-05-10T23:51:21Z"
        }
      ]
    },
    {
      "issueid": "DD-683",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Periodically request UAV state",
        "description": "The UI shall periodically request the list of all activated UAVs from the UIMiddleware and updates the display of currently activated UAVs"
      },
      "children": {
        "subtasks": [
          "ST-221"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoPanel.java",
          "timestamp": "2018-05-10T23:52:35Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/start/MyUI.java",
          "timestamp": "2018-05-10T23:52:35Z"
        }
      ]
    },
    {
      "issueid": "DD-682",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Request UAV state upon loading",
        "description": "Upon loading,  the UI shall request information about all activated UAVs from the UIMiddleware . Once the UIMiddleware respond to the request,  the UI shall display a list of all currently activated UAVs."
      },
      "children": {
        "subtasks": [
          "ST-215",
          "ST-217"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoPanel.java",
          "timestamp": "2018-05-11T00:04:18Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2018-05-11T00:04:18Z"
        }
      ]
    },
    {
      "issueid": "RE-681",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Display activated UAVs",
        "description": "The RealTimeFlightUI shall display the name and status of all currently activated UAVs"
      },
      "children": {
        "refinedby": [
          "DD-113",
          "DD-682",
          "DD-683"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-679",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Display a list of existing routes",
        "description": "When the RouteCreationUI is loaded a list of all existing routes shall be displayed."
      },
      "children": {
        "refinedby": [
          "DD-168"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-678",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Delete a route",
        "description": "When the user presses the route delete button,  a confirmation message shall be displayed and if confirmed by the user then the route shall be deleted."
      },
      "children": {
        "subtasks": [
          "ST-346"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/DroneSetupService.java",
          "timestamp": "2018-05-08T17:44:22Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/windows/FRDeleteRouteConfirmation.java",
          "timestamp": "2018-05-08T17:44:22Z"
        }
      ]
    },
    {
      "issueid": "RE-677",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Delete a route",
        "description": "The RouteCreationUI shall allow a user to delete a route."
      },
      "children": {
        "refinedby": [
          "DD-678"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-676",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "View multiple routes",
        "description": "When selected by the user,  multiple routes shall be displayed simultaneously on the map."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-675",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Waypoints connecte by arcs",
        "description": "Consecutive waypoints in a route on a map shall be connected by lines."
      },
      "children": {
        "subtasks": [
          "ST-349"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/MapDrawingUtil.java",
          "timestamp": "2018-05-11T00:06:04Z"
        }
      ]
    },
    {
      "issueid": "DD-674",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Create and modify route in visual mode",
        "description": "The RouteCreationUI shall support route creation and modification in visual mode allowing the user to click on a location in order to create,  modify,  or delete a waypoint.  "
      },
      "children": {
        "subtasks": [
          "ST-169",
          "ST-173",
          "ST-174",
          "ST-175",
          "ST-176",
          "ST-226"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMainLayout.java",
          "timestamp": "2018-05-11T00:09:34Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2018-05-11T00:09:34Z"
        }
      ]
    },
    {
      "issueid": "DD-673",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Create and modify route in table mode",
        "description": "The RouteCreationUI shall support route creation and modification in tabular mode by displaying a editable table showing each waypoint and the velocity of the UAV approaching the waypoint."
      },
      "children": {
        "subtasks": [
          "ST-199",
          "ST-211",
          "ST-227",
          "ST-233",
          "ST-308"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2018-05-11T00:20:54Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRTableDisplay.java",
          "timestamp": "2018-05-11T00:20:54Z"
        }
      ]
    },
    {
      "issueid": "RE-672",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Route creation and modification",
        "description": "The RouteCreationUI shall allow the user to create and modify a route."
      },
      "children": {
        "refinedby": [
          "DD-673",
          "DD-674",
          "DD-675",
          "DD-676",
          "DD-767"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-671",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Persist Route",
        "description": "The route information shall be represented using the Standard Route XML format and transmitted to the UIMiddleware"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FREditModeController.java",
          "timestamp": "2018-05-08T17:42:30Z"
        }
      ]
    },
    {
      "issueid": "RE-670",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Persist Route",
        "description": "When requested, the RouteCreationUI shall send a newly created or modified route to dronology."
      },
      "children": {
        "refinedby": [
          "DD-671"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-669",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Route description",
        "description": "The UI shall provide respective fields for displaying and modifying the ID,  textual description,  waypoints,  and other route information."
      },
      "children": {
        "subtasks": [
          "ST-200",
          "ST-373"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2018-05-11T00:22:25Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMetaInfo.java",
          "timestamp": "2018-05-11T00:22:25Z"
        }
      ]
    },
    {
      "issueid": "RE-668",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Route description",
        "description": "Each route shall include a unique ID,  a textual description,  and a set of waypoints,  all of which are editable in the UI."
      },
      "children": {
        "refinedby": [
          "DD-669",
          "DD-762"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-667",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Validate route altitude and speed",
        "description": "The altitude and speed values shall not exceed the current maximum UAV MAX ALTITUDE. UAV MAX GROUND SPEED set in the system."
      },
      "children": {
        "subtasks": [
          "ST-396"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-666",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Validate route altitude and speed",
        "description": "The RouteCreationUI shall only accept valid altitude and speed values for waypoint."
      },
      "children": {
        "refinedby": [
          "DD-667"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-665",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Updating waypoint colors",
        "description": "Waypoint colors shall be updated as the flight route is edited (e.g.  when a new first or last waypoint is added.) If current edits are canceled, the colors shall be reset to reflect current waypoints."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2018-05-07T18:38:40Z"
        }
      ]
    },
    {
      "issueid": "RE-664",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Distinguish key waypoints",
        "description": "The RouteCreationUI shall distinguish between starting,  ending,  and intermediate waypoint markers."
      },
      "children": {
        "refinedby": [
          "DD-421",
          "DD-665"
        ]
      },
      "code": []
    },
    {
      "issueid": "CO-663",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "UI Route Creation",
        "description": "Provides capabilities for creating new flight routes on a map that are stored in Dronology"
      },
      "children": {
        "contains": [
          "DD-168",
          "DD-421",
          "DD-665",
          "DD-667",
          "DD-669",
          "DD-671",
          "DD-673",
          "DD-674",
          "DD-675",
          "DD-676",
          "DD-678",
          "DD-762",
          "DD-767",
          "RE-664",
          "RE-666",
          "RE-668",
          "RE-670",
          "RE-672",
          "RE-677",
          "RE-679"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-661",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Request UI Middleware to cancel pending flight",
        "description": "When the user presses the cancel pending flight plan button a request is sent to the UI Middleware to cancel the flight."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-660",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Cancel pending flight plan button",
        "description": "Each UAV shall have a cancel pending flight plan button associated with it."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "RE-659",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Cancel pending flight",
        "description": "When a user shall cancels a pending flight plan the RouteAssignmentUI shall notify Dronology."
      },
      "children": {
        "refinedby": [
          "DD-660",
          "DD-661"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-658",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Delete routes",
        "description": "Flight plans assigned to an UAV that have not yet been executed may be deleted by selecting the route and clicking the deselect button."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFAssignRouteComponent.java",
          "timestamp": "2018-05-08T23:28:19Z"
        }
      ]
    },
    {
      "issueid": "DD-657",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Reorder routes",
        "description": "Flight plans assigned to an UAV that have not yet been executed may be reordered by dragging a route within the list of assigned routes to a new position."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFAssignRouteComponent.java",
          "timestamp": "2018-05-08T23:26:59Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFDragLayout.java",
          "timestamp": "2018-05-08T23:26:59Z"
        }
      ]
    },
    {
      "issueid": "RE-656",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Modify assigned routes",
        "description": "A user may reorder routes or remove flight plans assigned to a UAV as long as the flight has not started execution."
      },
      "children": {
        "refinedby": [
          "DD-657",
          "DD-658"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-655",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Display UAV Details",
        "description": "When a UAV is selected, the RouteAssignmentUI shall display its active flight plans."
      },
      "children": {
        "refinedby": [
          "DD-760",
          "DD-761"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-654",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UI requests pending flight plans from UI Middleware",
        "description": "When the user requests to view flight plans assigned to a UAV, the UI requests the pending flight plans from the UAV FlightInfo object and displays them."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFAssignRouteComponent.java",
          "timestamp": "2018-05-08T19:43:58Z"
        }
      ]
    },
    {
      "issueid": "DD-652",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "UI requests UAV data from UI Middleware",
        "description": "When detailed information is requested by the user for a UAV, the UI shall request the UAV Data object from the UIMiddleware."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "RE-651",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Display UAV flight plan details",
        "description": "When requested by the user, the RouteAssignmentUI shall display details about the selected UAV and its flight plans."
      },
      "children": {
        "refinedby": [
          "DD-652",
          "DD-654"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-650",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Transmit Route removals to UI Middleware",
        "description": "When route assignments are removed from a UAV, a request shall be sent to the UIMiddleware to remove the assignment in Dronology."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFAssignRouteComponent.java",
          "timestamp": "2018-05-08T17:38:36Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFDragLayout.java",
          "timestamp": "2018-05-08T17:38:36Z"
        }
      ]
    },
    {
      "issueid": "RE-649",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Transmit Route assignments to UI Middleware",
        "description": "When a route is assigned or removed from a UAV, the RouteAssignmentUI shall notify Dronology."
      },
      "children": {
        "refinedby": [
          "DD-352",
          "DD-650"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-648",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Use mouse to assign routes",
        "description": "A route shall be assigned to a selected UAV using the mouse to drag and drop or double clicking on the route."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFAssignRouteComponent.java",
          "timestamp": "2018-05-08T17:38:36Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFDragLayout.java",
          "timestamp": "2018-05-08T17:38:36Z"
        }
      ]
    },
    {
      "issueid": "DD-647",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Assign routes to UAV",
        "description": "The user shall select a UAV and then assign routes to it from an available route list."
      },
      "children": {
        "subtasks": [
          "ST-228",
          "ST-246",
          "ST-279",
          "ST-281",
          "ST-334",
          "ST-335",
          "ST-336",
          "ST-337",
          "ST-369",
          "ST-384",
          "ST-385"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFAssignRouteComponent.java",
          "timestamp": "2018-05-11T00:27:06Z"
        }
      ]
    },
    {
      "issueid": "RE-646",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Assign Routes",
        "description": "The RouteAssignmentUI shall provide means to select an existing routes and assign them to a UAV."
      },
      "children": {
        "refinedby": [
          "DD-647",
          "DD-648"
        ]
      },
      "code": []
    },
    {
      "issueid": "CO-645",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "UI Route Assignment",
        "description": "Provides capabilities for selecting existing routes and assigning them to active UAVs"
      },
      "children": {
        "contains": [
          "DD-352",
          "DD-647",
          "DD-648",
          "DD-650",
          "DD-652",
          "DD-654",
          "DD-657",
          "DD-658",
          "DD-660",
          "DD-661",
          "DD-760",
          "DD-761",
          "RE-646",
          "RE-649",
          "RE-651",
          "RE-655",
          "RE-656",
          "RE-659"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-644",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "UI binding to a UAV",
        "description": "Before issuing commands to an UAV the VaadinUI shall request control via the UIMiddleware."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "RE-643",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Load default coordinates",
        "description": "When loading the map view it shall be positioned at the pre-defined location"
      },
      "children": {
        "refinedby": [
          "DD-117",
          "DD-118",
          "DD-119"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-642",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Load configuration",
        "description": "When the VaadinUI is activated, the VaadinUI shall be configured according to stored configuration parameters."
      },
      "children": {
        "refinedby": [
          "DD-122"
        ]
      },
      "code": []
    },
    {
      "issueid": "CO-641",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "Vaadin UI",
        "description": "User interface for managing UAVs, routes,  and planning flights."
      },
      "children": {
        "contains": [
          "DD-117",
          "DD-118",
          "DD-119",
          "DD-122",
          "DD-644",
          "RE-112",
          "RE-642",
          "RE-643"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-640",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UI forwards mission plan requests to dronology",
        "description": "The UIMiddleware shall forward a mission plan request to dronology."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IMissionPlanningRemoteService.java",
          "timestamp": "2018-05-08T17:34:57Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/MissionPlanningServiceRemoteFacade.java",
          "timestamp": "2018-05-08T17:34:57Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/missionplanning/MissionPlanningService.java",
          "timestamp": "2018-05-08T17:34:57Z"
        }
      ]
    },
    {
      "issueid": "RE-639",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "UI accepts mission plans",
        "description": "The UIMiddleware shall accept and activate a mission plan upon request."
      },
      "children": {
        "refinedby": [
          "DD-640"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-638",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UI middleware supports route assignment to UAV",
        "description": "The UIMiddleware shall assign the list of waypoints from a route to an active UAV in order to create a flight plan."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerService.java",
          "timestamp": "2018-05-08T17:31:07Z"
        }
      ]
    },
    {
      "issueid": "RE-637",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "UI middleware supports route assignment to UAV",
        "description": "The UIMiddleware shall enable an existing route to be assigned to an active UAV."
      },
      "children": {
        "refinedby": [
          "DD-638"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-636",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UI middleware supports flight route modification",
        "description": "When requested by a UI client, the UIMiddleware shall support the modification of an existing flight route with an given ID."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/base/AbstractFileTransmitServerService.java",
          "timestamp": "2018-05-08T17:29:57Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/FlightRouteplanningServiceRemoteFacade.java",
          "timestamp": "2018-05-08T17:29:57Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightroute/FlightRouteplanningService.java",
          "timestamp": "2018-05-08T17:29:57Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightroute/FlightRouteplanningServiceInstance.java",
          "timestamp": "2018-05-08T17:29:57Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightroute/IFlightRouteplanningServiceInstance.java",
          "timestamp": "2018-05-08T17:29:57Z"
        }
      ]
    },
    {
      "issueid": "DD-635",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UI middleware supports flight route creation",
        "description": "When requested by a UI client, the UIMiddleware shall create a new flight route with a unique ID."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/base/AbstractFileTransmitServerService.java",
          "timestamp": "2018-05-08T17:29:57Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/FlightRouteplanningServiceRemoteFacade.java",
          "timestamp": "2018-05-08T17:29:57Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightroute/FlightRouteplanningService.java",
          "timestamp": "2018-05-08T17:29:57Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightroute/FlightRouteplanningServiceInstance.java",
          "timestamp": "2018-05-08T17:29:57Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightroute/IFlightRouteplanningServiceInstance.java",
          "timestamp": "2018-05-08T17:29:57Z"
        }
      ]
    },
    {
      "issueid": "RE-634",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "UI middleware provides support for modifying flight routes",
        "description": "The UIMiddleware shall enable the creation and modification of flight routes"
      },
      "children": {
        "refinedby": [
          "DD-635",
          "DD-636"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-633",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UI middleware forwards return to home commands from clients to dronology",
        "description": "The UIMiddleware, accepts return to home commands associated with a unique UAV ID and forwards to Dronology"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IFlightManagerRemoteService.java",
          "timestamp": "2018-05-08T17:23:47Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/FlightManagerServiceRemoteFacade.java",
          "timestamp": "2018-05-08T17:23:47Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerService.java",
          "timestamp": "2018-05-08T17:23:47Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerServiceInstance.java",
          "timestamp": "2018-05-08T17:23:47Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/IFlightManagerServiceInstance.java",
          "timestamp": "2018-05-08T17:23:47Z"
        }
      ]
    },
    {
      "issueid": "DD-632",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UI middleware forwards takeoff commands from clients to dronology",
        "description": "The UIMiddleware accepts takeoff commands associated with a unique UAV ID and forwards to Dronology"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IFlightManagerRemoteService.java",
          "timestamp": "2018-05-08T17:23:47Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/FlightManagerServiceRemoteFacade.java",
          "timestamp": "2018-05-08T17:23:47Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerService.java",
          "timestamp": "2018-05-08T17:23:47Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerServiceInstance.java",
          "timestamp": "2018-05-08T17:23:47Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/IFlightManagerServiceInstance.java",
          "timestamp": "2018-05-08T17:23:47Z"
        }
      ]
    },
    {
      "issueid": "DD-631",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UI middleware forwards hover in place commands from clients to dronology",
        "description": "The UIMiddleware accepts hover in place commands associated with a unique UAV ID and forwards to Dronology"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/FlightManagerServiceRemoteFacade.java",
          "timestamp": "2018-05-11T01:53:05Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerService.java",
          "timestamp": "2018-05-11T01:53:05Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerServiceInstance.java",
          "timestamp": "2018-05-11T01:53:05Z"
        }
      ]
    },
    {
      "issueid": "RE-630",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "UI middleware forwards commands from clients to dronology",
        "description": "The UIMiddleware accepts commands from UIs and forwards to Dronology"
      },
      "children": {
        "refinedby": [
          "DD-631",
          "DD-632",
          "DD-633",
          "DD-764"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-629",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UI middleware retrieves flight routes",
        "description": "The UIMiddleware retrieves and returns a list of previously saved flight routes"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/base/AbstractFileTransmitServerService.java",
          "timestamp": "2018-05-08T19:19:02Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightroute/FlightRouteplanningService.java",
          "timestamp": "2018-05-08T19:19:02Z"
        }
      ]
    },
    {
      "issueid": "RE-628",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "UI middleware lists all saved flight routes",
        "description": "The UIMiddleware shall provide a list of all existing routes"
      },
      "children": {
        "refinedby": [
          "DD-629"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-627",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UI middleware lists currently active UAVs",
        "description": "The UIMiddleware returns a list of UAV proxy objects containing information about all active UAVs including location, battery level,  ground speed,  and health status."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IDroneSetupRemoteService.java",
          "timestamp": "2018-05-08T17:08:47Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/DroneSetupService.java",
          "timestamp": "2018-05-08T17:14:22Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/DroneSetupServiceInstance.java",
          "timestamp": "2018-05-08T17:08:47Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/DroneSetupServiceRemoteFacade.java",
          "timestamp": "2018-05-08T17:08:47Z"
        }
      ]
    },
    {
      "issueid": "RE-626",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "UI middleware lists currently active UAVs",
        "description": "The UIMiddleware shall provide a list of all active UAVs"
      },
      "children": {
        "refinedby": [
          "DD-627"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-625",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "UI middleware releases control locks",
        "description": "If the heartbeat fails for a client holding one or more control locks after CLIENT HEARTBEAT TIME then the UIMiddleware shall release all of its control locks."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-624",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "UI middleware handles control heartbeat",
        "description": "The UIMiddleware shall monitor liveness of clients holding control locks on individual UAVs."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-623",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "UI middleware handles control lock releases",
        "description": "The UI middleware shall forward control requests from UI clients to release a control lock on a UAV."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-622",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "UI middleware handles control lock requests",
        "description": "The UIMiddleware shall forward control requests from UI clients to hold a control lock on a UAV."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-621",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Client registration",
        "description": "A client shall register to the UIMiddleware using a unique id"
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "CO-620",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "UI Middleware",
        "description": "Provides capabilities for connecting to multiple GCS, sending commands to,  and receiving messages from UAVs."
      },
      "children": {
        "contains": [
          "DD-11",
          "DD-18",
          "DD-19",
          "DD-20",
          "DD-21",
          "DD-22",
          "DD-621",
          "DD-622",
          "DD-623",
          "DD-624",
          "DD-625",
          "DD-627",
          "DD-629",
          "DD-631",
          "DD-632",
          "DD-633",
          "DD-635",
          "DD-636",
          "DD-638",
          "DD-640",
          "DD-764",
          "RE-108",
          "RE-110",
          "RE-626",
          "RE-628",
          "RE-630",
          "RE-634",
          "RE-637",
          "RE-639",
          "RE-9"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-619",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Log state and monitoring messages",
        "description": "While the log level HW TRACE is active each state and monitoring message shall be logged."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/ReadDispatcher.java",
          "timestamp": "2018-05-08T13:29:05Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/ReadDispatcher.java",
          "timestamp": "2018-05-08T13:32:18Z"
        }
      ]
    },
    {
      "issueid": "DD-618",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Log all connection related events",
        "description": "Each connection request, handshake and mode change message shall be logged"
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/GroundstationConnector.java",
          "timestamp": "2018-05-08T19:13:53Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/GroundstationConnector.java",
          "timestamp": "2018-05-08T19:15:06Z"
        }
      ]
    },
    {
      "issueid": "DD-617",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Log all commands sent to GCS",
        "description": "Each command sent to a GCS via the GCSMiddleware shall be logged"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/DroneFlightStateManager.java",
          "timestamp": "2018-05-08T13:27:26Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/PhysicalDrone.java",
          "timestamp": "2018-05-08T13:19:57Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/GroundstationConnector.java",
          "timestamp": "2018-05-08T13:27:26Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/DispatchQueueManager.java",
          "timestamp": "2018-05-08T13:27:26Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/WriteDispatcher.java",
          "timestamp": "2018-05-08T13:19:57Z"
        }
      ]
    },
    {
      "issueid": "RE-616",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Logging of GCS related events",
        "description": "The ActivityLogger shall log all commands sent to and messages received from a CGS."
      },
      "children": {
        "refinedby": [
          "DD-213",
          "DD-617",
          "DD-618",
          "DD-619"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-615",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Log actions and timestamps for flight plan events",
        "description": "The timestamp and the type of action shall be logged into the mission log for each flight plan related event.   This includes (1) time of scheduling,  (2) time of execution,  (3) time of completing plan,  (4) reordering plan, (5) canceling plan"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/FlightPlan.java",
          "timestamp": "2018-05-08T13:16:29Z"
        }
      ]
    },
    {
      "issueid": "DD-614",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Create log event when UAV reaches a waypoint",
        "description": "When a UAV reaches a waypoint while executing a flight plan,  a log event shall be created that includes the coordinates of the waypoint,  the UAV the flight plan is assigned to,  the flight plan ID,  and the timestamp."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/ManagedDrone.java",
          "timestamp": "2018-05-08T13:17:12Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/PhysicalDrone.java",
          "timestamp": "2018-05-08T13:17:12Z"
        }
      ]
    },
    {
      "issueid": "DD-613",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Create log event when flight plan is executed",
        "description": "When a flight plan is executed a log event shall be created that includes the name of the route,  the UAV it is assigned to,  and the execution time stamp."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPool.java",
          "timestamp": "2018-05-08T13:14:17Z"
        }
      ]
    },
    {
      "issueid": "DD-612",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Create log event upon initiation of flight plan",
        "description": "When a flight plan is initiated a log event shall be created that includes the name of the route,  the UAV it is assigned to,  and the initiation time stamp."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPool.java",
          "timestamp": "2018-05-08T13:14:17Z"
        }
      ]
    },
    {
      "issueid": "RE-611",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Logging of Flight Plan related Events",
        "description": "The ActivityLogger shall log all flight plan related events."
      },
      "children": {
        "refinedby": [
          "DD-104",
          "DD-612",
          "DD-613",
          "DD-614",
          "DD-615"
        ]
      },
      "code": []
    },
    {
      "issueid": "CO-610",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "Activity Logger",
        "description": "Provides capabilities for logging UAV related events (such as assigned flights,  executed missions...)."
      },
      "children": {
        "contains": [
          "DD-104",
          "DD-213",
          "DD-612",
          "DD-613",
          "DD-614",
          "DD-615",
          "DD-617",
          "DD-618",
          "DD-619",
          "RE-611",
          "RE-616"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-609",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Simulate battery drain in NVECSimulator",
        "description": "When a simulated UAV is in flight,  the NVECSimulator shall reduce the battery every second by SIMULATOR BATTERY DRAIN VOLTS."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/simplesimulator/DroneVoltageSimulator.java",
          "timestamp": "2018-05-08T13:05:55Z"
        }
      ]
    },
    {
      "issueid": "DD-608",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Simulate land in NVECSimulator",
        "description": "When given a land command, the NVECSimulator shall immediately change the UAVs current altitude to the ground altitude."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/VirtualDrone.java",
          "timestamp": "2018-05-08T13:05:15Z"
        }
      ]
    },
    {
      "issueid": "DD-607",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Simulate travel to target",
        "description": "While responding to a goto command, the NVECSimulator shall continue moving in steps towards the target coordinates until the target has been reached."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/nvecsimulator/NVECSimulator.java",
          "timestamp": "2018-05-08T13:08:07Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/nvecsimulator/NvecInterpolator.java",
          "timestamp": "2018-05-08T13:08:07Z"
        }
      ]
    },
    {
      "issueid": "DD-606",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Simulate goto in NVECSimulator",
        "description": "When given a goto command the NVECSimulator shall compute the next coordinate based upon the normal vector and altitude of the current position and the normal vector and altitude of the destination. The simulator shall move the UAV with infinite acceleration and use numerical methods to hone in on the next coordinate which will be SIMULATION STEP SIZE meters from the current position along the travel path."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/nvecsimulator/NVECSimulator.java",
          "timestamp": "2018-05-08T13:08:07Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/nvecsimulator/NvecInterpolator.java",
          "timestamp": "2018-05-08T13:08:07Z"
        }
      ]
    },
    {
      "issueid": "DD-605",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Simulate takeoff in NVECSimulator",
        "description": "When given a takeoff command the NVECSimulator shall move with infinite acceleration the UAV to the takeoff altitude corresponding to its current longitude and latitude."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/VirtualDrone.java",
          "timestamp": "2018-05-08T13:05:15Z"
        }
      ]
    },
    {
      "issueid": "CO-604",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "NVEC Simulator",
        "description": ""
      },
      "children": {
        "contains": [
          "DD-605",
          "DD-606",
          "DD-607",
          "DD-608",
          "DD-609"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-603",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Simulate battery drain in simple simulator",
        "description": "When a simulated UAV is in flight,  the InternalSimulator shall reduce the battery every second by SIMULATOR BATTERY DRAIN VOLTS."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/simplesimulator/DroneVoltageSimulator.java",
          "timestamp": "2018-05-08T03:04:36Z"
        }
      ]
    },
    {
      "issueid": "DD-602",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Simulate land in internal simulator",
        "description": "When given a land command, the InternalSimulator shall immediately change the UAVs current altitude to the ground altitude."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/VirtualDrone.java",
          "timestamp": "2018-05-08T03:10:29Z"
        }
      ]
    },
    {
      "issueid": "DD-601",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Simulate travel to target",
        "description": "While responding to a goto command,  the InternalSimulator shall continue moving in steps towards the target coordinates until the target has been reached."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/simplesimulator/FlightSimulator.java",
          "timestamp": "2018-05-08T03:09:00Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/simplesimulator/SimpleSimulator.java",
          "timestamp": "2018-05-08T03:09:00Z"
        }
      ]
    },
    {
      "issueid": "DD-600",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Simulate goto in internal simulator",
        "description": "When given a goto command the InternalSimulator shall compute the next coordinate based upon the angle of travel and the step-size."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/simplesimulator/FlightSimulator.java",
          "timestamp": "2018-05-08T16:59:10Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/simplesimulator/SimpleSimulator.java",
          "timestamp": "2018-05-08T16:59:10Z"
        }
      ]
    },
    {
      "issueid": "DD-599",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Simulate takeoff in internal simulator",
        "description": "When given a takeoff command the InternalSimulator shall move with infinite acceleration the UAV to the takeoff altitude corresponding to its current longitude and latitude."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/VirtualDrone.java",
          "timestamp": "2018-05-08T03:10:29Z"
        }
      ]
    },
    {
      "issueid": "CO-598",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "Simple Simulator",
        "description": "Provides basic capabilities for simulating the flight of Virtual UAVs."
      },
      "children": {
        "contains": [
          "DD-599",
          "DD-600",
          "DD-601",
          "DD-602",
          "DD-603"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-597",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Simulate battery",
        "description": "The InternalSimulator shall approximate the state of the battery"
      },
      "children": {
        "refinedby": [
          "DD-603",
          "DD-609"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-596",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Simulate land",
        "description": "When given a landing command the InternalSimulator shall move the UAV from to the ground altitude corresponding to its current longitude and latitude."
      },
      "children": {
        "refinedby": [
          "DD-602",
          "DD-608"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-595",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Simulate goto",
        "description": "When given a goto command, the InternalSimulator shall update the location of the UAV at increments of SIMULATION STEP SIZE meters  moving it towards the target destination until the destination is reached."
      },
      "children": {
        "refinedby": [
          "DD-600",
          "DD-601",
          "DD-606",
          "DD-607"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-594",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Simulate takeoff",
        "description": "When given a takeoff command the InternalSimulator shall move the UAV to the takeoff altitude corresponding to its current longitude and latitude."
      },
      "children": {
        "refinedby": [
          "DD-599",
          "DD-605"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-593",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Simulate behavior of a virtual UAV",
        "description": "The InternalSimulator shall approximate the behavior of a UAV."
      },
      "children": {
        "refinedby": [
          "RE-594",
          "RE-595",
          "RE-596",
          "RE-597"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-592",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "UAV Registration",
        "description": "The UAVRegistrationManager shall store UAV meta-data information,  such as the  UAVs technical characteristics"
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "CO-591",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "UAV Registration Manager",
        "description": "Provides capabilities for registering UAVs  i.e.  providing meta-data regarding the UAV (such as payload,  wingspan,  equipment...)"
      },
      "children": {
        "contains": [
          "RE-592"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-590",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Establish maximum number of activated UAVs",
        "description": "The maximum number of activated UAVS shall be defined as MAX UAV"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/DronologyConstants.java",
          "timestamp": "2018-05-08T02:22:11Z"
        }
      ]
    },
    {
      "issueid": "RE-589",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Establish maximum number of activated UAVs",
        "description": "When the maximum numbers of allowed activated UAVs has been reached,  the UAVActivationManager shall reject any further activation requests."
      },
      "children": {
        "refinedby": [
          "DD-590"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-588",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Deactivates Physical UAVs",
        "description": "When a UAV is deactivated all scheduled flight plans shall be removed from the  UAVs flightplan pool."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/DroneFleetManager.java",
          "timestamp": "2018-05-08T02:27:34Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPoolManager.java",
          "timestamp": "2018-05-08T02:27:34Z"
        }
      ]
    },
    {
      "issueid": "RE-587",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Deactivates Physical UAVs",
        "description": "When a UAV is deactivated the UAVActivationManager shall cancel all current and scheduled flight plans"
      },
      "children": {
        "refinedby": [
          "DD-588"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-586",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Activate registered UAV",
        "description": "If the presented UAV ID represents a currently registered UAV,  then the UAVActivationManager shall activate the UAV."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-585",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Reject non registered UAV",
        "description": "If the presented UAV ID does not represent a currently registered UAV,  then the UAVActivationManager will reject the activation and notify the GCSMiddleware"
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-584",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Check for registered ID",
        "description": "When receiving a new activation request from the GCSMiddleware,  the UAVActivationManager shall check that the presented UAV ID represents a currently registered and non-activated UAV."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/DroneFleetManager.java",
          "timestamp": "2018-05-08T02:34:22Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/PhysicalDroneFleetFactory.java",
          "timestamp": "2018-05-08T02:35:08Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/VirtualDroneFleetFactory.java",
          "timestamp": "2018-05-08T02:35:08Z"
        }
      ]
    },
    {
      "issueid": "DD-583",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Reject duplicate request for UAV activation",
        "description": "If the presented UAV ID represents a currently activated UAV,  then the GCSMiddleware will be notified and no additional activation will be performed."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/DroneFleetManager.java",
          "timestamp": "2018-05-08T02:33:10Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/PhysicalDroneFleetFactory.java",
          "timestamp": "2018-05-08T02:33:10Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/VirtualDroneFleetFactory.java",
          "timestamp": "2018-05-08T02:33:10Z"
        }
      ]
    },
    {
      "issueid": "CO-582",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "UAV Activation Manager",
        "description": "Provides capabilities for activating and deactivating both Virtual and Physical UAVs within Dronology."
      },
      "children": {
        "contains": [
          "DD-583",
          "DD-584",
          "DD-585",
          "DD-586",
          "DD-588",
          "DD-590",
          "RE-161",
          "RE-36",
          "RE-587",
          "RE-589"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-580",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Transition from LANDING to ON GROUND",
        "description": "When a UAV is in LANDING state and reaches zero altitude it transitions to ON GROUND"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2018-05-08T16:56:48Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/DroneFlightStateManager.java",
          "timestamp": "2018-05-08T16:56:48Z"
        }
      ]
    },
    {
      "issueid": "DD-579",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Transition from IN AIR to LANDING",
        "description": "When a UAV is in IN AIR state and receives a command to land it transitions to LANDING state"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2018-05-08T16:56:48Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/DroneFlightStateManager.java",
          "timestamp": "2018-05-08T16:56:48Z"
        }
      ]
    },
    {
      "issueid": "DD-578",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Transition from IN AIR to FLYING",
        "description": "When a UAV is IN AIR state and is assigned a flight plan to execute it transitions to FLYING"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2018-05-08T16:56:48Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/DroneFlightStateManager.java",
          "timestamp": "2018-05-08T16:56:48Z"
        }
      ]
    },
    {
      "issueid": "DD-577",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Support for internally simulated UAVs",
        "description": "The system shall support internally simulated UAVs"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/VirtualDroneFleetFactory.java",
          "timestamp": "2018-05-08T12:28:07Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/VirtualDrone.java",
          "timestamp": "2018-05-08T12:28:07Z"
        }
      ]
    },
    {
      "issueid": "RE-576",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Support for internally simulated UAVs",
        "description": "The VehicleCore shall support virtual UAVs"
      },
      "children": {
        "refinedby": [
          "DD-577"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-575",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Support for GCS connected UAVs",
        "description": "The VehicleCore shall support UAVs capable of receiving and responding to commands sent via the ground control station"
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/PhysicalDroneFleetFactory.java",
          "timestamp": "2018-05-08T12:28:55Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/PhysicalDroneFleetFactory.java",
          "timestamp": "2018-05-08T12:29:34Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/PhysicalDrone.java",
          "timestamp": "2018-05-08T12:28:55Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/PhysicalDrone.java",
          "timestamp": "2018-05-08T12:29:34Z"
        }
      ]
    },
    {
      "issueid": "RE-574",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Support for GCS connected UAVs",
        "description": "The VehicleCore shall support UAVs connected via the GCS"
      },
      "children": {
        "refinedby": [
          "DD-575"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-573",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Simulated UAVs assigned unique IDs",
        "description": "An internally simulated UAV is instantiated with an ID that is unique from the IDs of all other currently activated UAVs."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/VirtualDroneFleetFactory.java",
          "timestamp": "2018-05-08T23:10:17Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/AbstractDrone.java",
          "timestamp": "2018-05-08T23:10:17Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/VirtualDrone.java",
          "timestamp": "2018-05-08T23:10:17Z"
        }
      ]
    },
    {
      "issueid": "DD-572",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UAV activation requires unique ID",
        "description": "An activation request for a UAV that is received from the GCSMiddleware is only accepted if the UAV provides an ID unique from all other currently activated UAVs."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/PhysicalDroneFleetFactory.java",
          "timestamp": "2018-05-08T23:10:59Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/AbstractDrone.java",
          "timestamp": "2018-05-08T23:10:59Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/PhysicalDrone.java",
          "timestamp": "2018-05-08T23:10:59Z"
        }
      ]
    },
    {
      "issueid": "DD-571",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "UAV type specification assignment",
        "description": "Each Virtual and Physical drone is associated with a predefined UAV TYPE defining its basic attributes."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "CO-570",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "Vehicle Core",
        "description": "Core component for managing different types of UAVs."
      },
      "children": {
        "contains": [
          "DD-26",
          "DD-30",
          "DD-31",
          "DD-32",
          "DD-33",
          "DD-500",
          "DD-527",
          "DD-528",
          "DD-529",
          "DD-530",
          "DD-571",
          "DD-572",
          "DD-573",
          "DD-575",
          "DD-577",
          "DD-578",
          "DD-579",
          "DD-580",
          "RE-25",
          "RE-38",
          "RE-574",
          "RE-576",
          "RE-8",
          "RE-80"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-569",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Hover in Place when distance to small",
        "description": "If an obstacle is detected within a distance of MIN STOPPING DISTANCE the ObjectAvoidance system shall issue a  hover in place  command"
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-568",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "UAV Distance",
        "description": "The ObjectAvoidance system shall compute pair-wise distances between UAVs"
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-567",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "UAV States",
        "description": "The ObjectAvoidance system shall maintain a list of UAV states"
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-566",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Onboard obstacle avoidance",
        "description": "The ObjectAvoidance system shall retrieve the state of the UAVs onboard ObjectAvoidance status."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-565",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Check UAV specific properties",
        "description": "The ObjectAvoidance system shall retrieve UAV properties and shall check all directives against them."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-564",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Continue to original destination",
        "description": "When a UAV which has been receiving evasive directives is no longer in close proximity to an object,  the ObjectAvoidance system shall stop sending directives and the UAV will continue towards its destination."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "RE-563",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Multiple UAVs in pattern based flight",
        "description": "When a group of UAVs are assigned flight patterns as part of a mission,  the system shall provide a warning if any paths overlap."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "RE-562",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Pattern-based flight path",
        "description": "A flight pattern shall document the longitude,  latitude,  and altitude of waypoints in a flight route as offsets from the starting position of the UAV."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-561",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Hover when active plan cancelled",
        "description": "When the flight plan is aborted the UAV switches to hover in place mode"
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-560",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "No reassignment of aborted flight plan",
        "description": "An aborted flight plan shall not be reassigned to any UAV"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPool.java",
          "timestamp": "2018-05-08T12:26:05Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPoolManager.java",
          "timestamp": "2018-05-08T12:26:05Z"
        }
      ]
    },
    {
      "issueid": "DD-559",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Remove aborted flight plan",
        "description": "When the flight plan is aborted it shall be removed from the associated UAV."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPool.java",
          "timestamp": "2018-05-08T12:26:05Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPoolManager.java",
          "timestamp": "2018-05-08T12:26:05Z"
        }
      ]
    },
    {
      "issueid": "RE-558",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Cancel active plan",
        "description": "If requested,  the SingleUAVFlightPlanScheduler shall abort the currently executing flight plan of an UAV"
      },
      "children": {
        "refinedby": [
          "DD-559",
          "DD-560",
          "DD-561"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-557",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Only one executing flight plan per UAV",
        "description": "Each UAV can only store one currently executing flight plan ID."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPool.java",
          "timestamp": "2018-05-08T12:24:44Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPoolManager.java",
          "timestamp": "2018-05-08T12:24:44Z"
        }
      ]
    },
    {
      "issueid": "DD-556",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Executing flight plan associated with UAV",
        "description": "The currently executing flight plan ID is associated with the UAV executing it."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPool.java",
          "timestamp": "2018-05-08T12:25:14Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPoolManager.java",
          "timestamp": "2018-05-08T12:25:14Z"
        }
      ]
    },
    {
      "issueid": "RE-555",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Hover at completion of flight",
        "description": "If a UAV does not have any pending flight plans,  then when it reaches the final waypoint of its current flight plan,  the SingleUAVFlightPlanScheduler shall notify the UAV to hover in place."
      },
      "children": {
        "refinedby": [
          "DD-81"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-554",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Assign next flight plan at completion of flight",
        "description": "If the flight plan queue is not empty when the UAV reaches the final waypoint of its current flight plan,  then the next flight plan is removed from the queue and set as the currently executed flight plan."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPoolManager.java",
          "timestamp": "2018-05-08T12:21:25Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2018-05-08T12:21:25Z"
        }
      ]
    },
    {
      "issueid": "DD-553",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Remove pending plans when return-to-home",
        "description": "When a UAV is issued a return-to-home command during a flight then the current flight plan is aborted and all scheduled flight plans are removed from its flight plan queue."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2018-05-08T12:14:53Z"
        }
      ]
    },
    {
      "issueid": "DD-552",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Automatic Flight Plan Assignment",
        "description": "If a flight plan is not assigned to a specific UAV the flight plan scheduler shall automatically assign it to the next available UAV."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPoolManager.java",
          "timestamp": "2018-05-08T12:19:51Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2018-05-08T12:19:51Z"
        }
      ]
    },
    {
      "issueid": "RE-551",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Automatic Flight Plan Assignment",
        "description": "If a scheduled flight is not manually assigned to a UAV,  the SingleUAVFlightPlanScheduler shall assign the route automatically to an UAV"
      },
      "children": {
        "refinedby": [
          "DD-552"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-550",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Manual Flight Plan Assignment",
        "description": "When a flight plan is assigned to a specific UAV it shall be placed in the UAVs execution queue."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPoolManager.java",
          "timestamp": "2018-05-08T12:19:51Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2018-05-08T12:19:51Z"
        }
      ]
    },
    {
      "issueid": "RE-549",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Manual Flight Plan Assignment",
        "description": "If a route contains a specific UAV ID,  the SingleUAVFlightPlanScheduler shall assign the route to the given UAV."
      },
      "children": {
        "refinedby": [
          "DD-550"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-548",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Flight Plan scheduling",
        "description": "When a flight route is scheduled for execution,  its waypoints,  takeoff altitude,  and identifier shall be used to instantiate a new flight plan"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2018-05-08T12:18:32Z"
        }
      ]
    },
    {
      "issueid": "RE-547",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Flight Plan scheduling",
        "description": "When requested,  the SingleUAVFlightPlanScheduler shall schedule a route for execution."
      },
      "children": {
        "refinedby": [
          "DD-548"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-546",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Cancel Mission",
        "description": "When requested by the user,  a currently executing mission plan shall be cancelled by removing all pending flight plans and removing all synchronization points."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/plan/FullMissionPlan.java",
          "timestamp": "2018-05-08T00:52:45Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/plan/MissionController.java",
          "timestamp": "2018-05-08T00:52:45Z"
        }
      ]
    },
    {
      "issueid": "RE-545",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Cancel Mission",
        "description": "When requested,  if a mission is currently active,  the MissionPlanner shall cancel the active mission."
      },
      "children": {
        "refinedby": [
          "DD-546"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-544",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Synchronized Landing",
        "description": "The FlightPattern for synchronized landing shall direct each UAV to synchronize at the final waypoint of the preceding route,  ascend or descend to a unique altitude,  synchronize  fly to the longitude and latitude of the home coordinates , synchronize  and then descend to the landing altitude."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/patterns/CoordinatedLandingPattern.java",
          "timestamp": "2018-05-08T00:47:44Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/sync/SyncConstants.java",
          "timestamp": "2018-05-08T00:47:44Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/tasks/PatternTask.java",
          "timestamp": "2018-05-08T00:47:44Z"
        }
      ]
    },
    {
      "issueid": "DD-543",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Synchronized Takeoff",
        "description": "The FlightPattern for synchronized takeoff shall direct each UAV to takeoff to a unique altitude  synchronize with other UAVs  fly at the unique altitude to the longitude and latitude of the first waypoint of the subsequent route  synchronize with other UAVs  descend or ascend to the target waypoint  and synchronize with other UAVs to complete the flight pattern."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/patterns/CoordinatedTakeoffPattern.java",
          "timestamp": "2018-05-08T00:46:15Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/sync/SyncConstants.java",
          "timestamp": "2018-05-08T00:46:15Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/tasks/PatternTask.java",
          "timestamp": "2018-05-08T00:46:15Z"
        }
      ]
    },
    {
      "issueid": "DD-542",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Mission Planning",
        "description": "When a predefined FlightPattern is included in a MissionPlan  it shall be expanded  prior to use into a set of waypoints and synchronization points for each of the participating UAVs."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/patterns/AbstractFlightPattern.java",
          "timestamp": "2018-05-08T01:04:55Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/patterns/IFlightPattern.java",
          "timestamp": "2018-05-08T01:04:55Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/patterns/PatternFactory.java",
          "timestamp": "2018-05-08T01:04:55Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/patterns/TaskList.java",
          "timestamp": "2018-05-08T01:04:55Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/plan/FullMissionPlan.java",
          "timestamp": "2018-05-08T01:04:55Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/tasks/IMissionTask.java",
          "timestamp": "2018-05-08T01:04:55Z"
        }
      ]
    },
    {
      "issueid": "RE-541",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Predefined flight patterns",
        "description": "The MissionPlanner shall manage predefined FlightPatterns"
      },
      "children": {
        "refinedby": [
          "DD-542",
          "DD-543",
          "DD-544"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-540",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Store mission plan as JSON",
        "description": "The MissionPlan shall be specified as a JSON file (see attached example)."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/JSONMissionPlanReader.java",
          "timestamp": "2018-05-08T00:35:33Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/plan/FullMissionPlan.java",
          "timestamp": "2018-05-08T00:35:33Z"
        }
      ]
    },
    {
      "issueid": "DD-538",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Wait at synchronization points",
        "description": "When a UAV is executing flight plans and reaches a synchronization point  it shall wait to proceed until all other UAVs sharing the same synchronization point have also reached this point."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/sync/SynchronizationManager.java",
          "timestamp": "2018-05-08T00:31:55Z"
        }
      ]
    },
    {
      "issueid": "DD-537",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Mission plan synchronization points",
        "description": "The flight plans of two or more UAVs shall be synchronized by inserting shared synchronization points between the ordered list of flight routes assigned to each participating UAV."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/sync/SynchronizationPoint.java",
          "timestamp": "2018-05-08T00:23:15Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/sync/SynchronizationState.java",
          "timestamp": "2018-05-08T00:23:15Z"
        }
      ]
    },
    {
      "issueid": "DD-536",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Ordered lists of routes in Mission Plan",
        "description": "Each individual UAV that is included in a MissionPlan shall have an ordered list of one or more flight routes assigned to it."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/plan/FullMissionPlan.java",
          "timestamp": "2018-05-08T00:12:01Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/plan/UAVMissionPlan.java",
          "timestamp": "2018-05-08T00:12:01Z"
        }
      ]
    },
    {
      "issueid": "DD-535",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Ignore specified takeoff altitude if UAV is in the air",
        "description": "If a UAV is in the air when a flight plan is assigned  the takeoff altitude in the flight plan is ignored."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-534",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Use default altitude if not provided in flight plan",
        "description": "If no takeoff altitude is prescribed in the flight plan assigned to a UAV currently on the ground  then the system-wide default altitude is used as the target takeoff altitude."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-533",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Takeoff Altitude",
        "description": "If a takeoff altitude is prescribed in the flight plan assigned to a UAV currently on the ground  then that altitude is used as the target takeoff altitude."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-532",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Check flight plan for takeoff altitude",
        "description": "When the takeoff command is issued  the FlightSchedulingAndExecution checks for a pre-specified altitude in the flight plan."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "RE-531",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Takeoff Altitude",
        "description": "When a flight plan is activated for a UAV currently on the ground  the FlightSchedulingandExecution shall notify the UAV to takeoff vertically until it reaches the prescribed altitude."
      },
      "children": {
        "refinedby": [
          "DD-532",
          "DD-534",
          "DD-535"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-530",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Visiting waypoints during flight plan",
        "description": "When the UAV reaches a target waypoint  if additional waypoints are specified in the flight plan  then the VehicleCore  shall send the next waypoint to the  UAVs GCS."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/PhysicalDrone.java",
          "timestamp": "2018-05-07T19:45:32Z"
        }
      ]
    },
    {
      "issueid": "DD-529",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Determine if waypoint is reached",
        "description": "If the computed distance from the UAV to the target waypoint is less than THRESHOLD WAYPOINT DISTANCE than the waypoint shall be considered reached."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/ManagedDrone.java",
          "timestamp": "2018-05-07T19:44:11Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/PhysicalDrone.java",
          "timestamp": "2018-05-07T19:44:11Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/VirtualDrone.java",
          "timestamp": "2018-05-07T19:44:11Z"
        }
      ]
    },
    {
      "issueid": "DD-528",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Compute distance to next waypoint",
        "description": "When the VehicleCore receives the  UAVs current coordinates and if the UAV has an assigned target waypoint  then the VehicleCore shall compute the current distance to the target waypoint."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/ManagedDrone.java",
          "timestamp": "2018-05-07T19:44:11Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/PhysicalDrone.java",
          "timestamp": "2018-05-07T19:44:11Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/VirtualDrone.java",
          "timestamp": "2018-05-07T19:44:11Z"
        }
      ]
    },
    {
      "issueid": "DD-527",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Send first waypoint at start of flight plan",
        "description": "At the start of a flight plan the system shall send the first target waypoint to the  UAVs GCS."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/SoloDirector.java",
          "timestamp": "2018-05-07T19:38:17Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/ManagedDrone.java",
          "timestamp": "2018-05-07T19:38:17Z"
        }
      ]
    },
    {
      "issueid": "DD-526",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Revert to previous state after rescinding Hover In Place",
        "description": "When the hover in place command is rescinded the  UAVs state is reverted to its previous state."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "RE-525",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Rescinding Hover In Place command",
        "description": "If a flight plan is active and the hover in place command is rescinded  the FlightManager shall notify the UAV to continue to the originally designated waypoint."
      },
      "children": {
        "refinedby": [
          "DD-526"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-524",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "No waypoint directives during Hover In Place",
        "description": "If the UAV is in  hover in place  mode then no waypoints directives for that UAV shall be sent to the GCS."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "RE-523",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Flight route assignment during Hover In Place",
        "description": "If a flight route is assigned to a UAV which is currently hovering in place  the FlightManager shall assign the route and maintain the hover in place mode."
      },
      "children": {
        "refinedby": [
          "DD-524"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-522",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Hover In Place state change",
        "description": "When the UAV is commanded to hover in place  its state is changed to hover in place and a command is sent to the GCS."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "RE-521",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Maintain position during Hover In Place",
        "description": "When the hover in place command is issued, the FlightManager shall halt the UAV in place and maintain its current position."
      },
      "children": {
        "refinedby": [
          "DD-522"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-520",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Return To Home as single waypoint",
        "description": "When the UAV is commanded to return to home, the current flight plan shall be removed and a new flight plan shall be created containing only a single waypoint representing its original launch coordinates."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2018-05-07T19:29:52Z"
        }
      ]
    },
    {
      "issueid": "DD-519",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Direction between waypoints",
        "description": "Direction between two coordinates shall be specified using a velocity vector from the first coordinate."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-518",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Location accuracy",
        "description": "Distances computed between two coordinates shall be accurate within 1 meter over a distance of 400 000 meters."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/coordinate/LlaCoordinate.java",
          "timestamp": "2018-05-09T20:16:33Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/coordinate/NVector.java",
          "timestamp": "2018-05-09T20:16:33Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/coordinate/PVector.java",
          "timestamp": "2018-05-09T20:16:33Z"
        }
      ]
    },
    {
      "issueid": "RE-517",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Calculate directions",
        "description": "When given two coordinates the CoordinateSystem shall compute the direction from the first coordinate to the second coordinate."
      },
      "children": {
        "refinedby": [
          "DD-519"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-516",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Calculate distances",
        "description": "When given two coordinates the CoordinateSystem shall compute the distance between them."
      },
      "children": {
        "refinedby": [
          "DD-518"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-515",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Coordinate system conversion from p-vector",
        "description": "When requested, coordinates shall be transformed from p-vectors to the default representation."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/coordinate/LlaCoordinate.java",
          "timestamp": "2018-05-07T19:23:33Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/coordinate/PVector.java",
          "timestamp": "2018-05-07T19:23:33Z"
        }
      ]
    },
    {
      "issueid": "DD-514",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Coordinate system conversion from n-vector",
        "description": "When requested, coordinates shall be transformed from n-vectors to the default representation."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/coordinate/LlaCoordinate.java",
          "timestamp": "2018-05-07T19:24:00Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/coordinate/NVector.java",
          "timestamp": "2018-05-07T19:24:00Z"
        }
      ]
    },
    {
      "issueid": "DD-513",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Coordinate system conversion to p-vector",
        "description": "When requested, the CoordinateSystem shall be transform coordinates from the default representation to p-vectors."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/coordinate/LlaCoordinate.java",
          "timestamp": "2018-05-07T19:23:33Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/coordinate/PVector.java",
          "timestamp": "2018-05-07T19:23:33Z"
        }
      ]
    },
    {
      "issueid": "DD-512",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Coordinate system conversion to n-vector",
        "description": "When requested, the CoordinateSystem shall transform coordinates transformed from the default representation to n-vectors."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/coordinate/LlaCoordinate.java",
          "timestamp": "2018-05-07T19:22:38Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/coordinate/NVector.java",
          "timestamp": "2018-05-07T19:22:38Z"
        }
      ]
    },
    {
      "issueid": "DD-511",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Default coordinate system",
        "description": "The default coordinate representation shall use LLA (longitude latitude  altitude) format."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/coordinate/LlaCoordinate.java",
          "timestamp": "2018-05-07T19:21:54Z"
        }
      ]
    },
    {
      "issueid": "RE-510",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Coordinate system conversion",
        "description": "When requested,  the CoordinateSystem shall transform coordinates to alternate formats."
      },
      "children": {
        "refinedby": [
          "DD-511",
          "DD-512",
          "DD-513",
          "DD-514",
          "DD-515"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-509",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Takeoff Altitude Tag",
        "description": "The flight route xml format includes an optional takeoff altitude tag"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/items/FlightRoute.java",
          "timestamp": "2018-05-07T16:57:24Z"
        }
      ]
    },
    {
      "issueid": "RE-508",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Specify takeoff altitude",
        "description": "When a flight route requires a customized takeoff altitude that differs from the system s default takeoff altitude  it shall be specified in the flight route."
      },
      "children": {
        "refinedby": [
          "DD-509"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-507",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Retrieve flight route",
        "description": "When the UIMiddleware requests a flight route identified by its unique name,  the FlighRouteManager shall retrieve the associated file."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightroute/FlightRouteplanningServiceInstance.java",
          "timestamp": "2018-05-07T16:25:54Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightroute/FlightRouteplanningServiceInstance.java",
          "timestamp": "2018-05-07T16:29:05Z"
        }
      ]
    },
    {
      "issueid": "DD-506",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Save flight route",
        "description": "When a flight route is uploaded to Dronology,  the FlightRouteManager shall  save it under a unique name as an xml file."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/base/AbstractFileTransmitServiceInstance.java",
          "timestamp": "2018-05-07T18:25:40Z"
        }
      ]
    },
    {
      "issueid": "RE-505",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Flight route persistence",
        "description": "The FlightRouteManager shall persist flight routes."
      },
      "children": {
        "refinedby": [
          "DD-506",
          "DD-507"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-504",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Flight route must be valid",
        "description": "Upon receipt of a new or modified flight route from the UI middleware,  the FlightRouteManager shall check that it is a VALID FLIGHT ROUTE,  i.e.  that all waypoints are valid coordinates and that the flight route contains at least one waypoint."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "RE-503",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Valid Flight Route",
        "description": "The FlightRouteManager shall ensure that all flight routes represent a VALID FLIGHT ROUTE."
      },
      "children": {
        "refinedby": [
          "DD-504"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-502",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Specify flight route in standard format",
        "description": "Flight routes shall be specified in the standard XML FlightRoute format."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/persistence/FlightRoutePersistenceProvider.java",
          "timestamp": "2018-05-07T16:55:12Z"
        }
      ]
    },
    {
      "issueid": "RE-501",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Flight route defined as waypoints",
        "description": "The FlightRouteManager shall define flight routes as an ordered sequence of waypoints in which the first waypoint represents the first target location and the final waypoint represents the final target location."
      },
      "children": {
        "refinedby": [
          "DD-502",
          "DD-75"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-500",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Transition to USER CONTROLLED\t",
        "description": "When a mode change message to USER CONTROLLED is received the Vehicle shall transition to  USER CONTROLLED."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/AbstractDrone.java",
          "timestamp": "2018-05-11T00:29:12Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/PhysicalDrone.java",
          "timestamp": "2018-05-11T00:29:12Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/StatusDispatchThread.java",
          "timestamp": "2018-04-11T17:45:44Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/StatusDispatchThread.java",
          "timestamp": "2018-05-11T00:29:12Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/messages/ModeChangeMessageTypeAdapter.java",
          "timestamp": "2018-04-13T12:23:38Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/messages/UAVMessageFactory.java",
          "timestamp": "2018-04-13T12:23:38Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/messages/UAVModeChangeMessage.java",
          "timestamp": "2018-04-13T12:23:38Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/missionplanning/IMissionPlanningServiceInstance.java",
          "timestamp": "2018-04-11T17:45:44Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/missionplanning/MissionPlanningService.java",
          "timestamp": "2018-04-11T17:45:44Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/missionplanning/MissionPlanningServiceInstance.java",
          "timestamp": "2018-04-11T17:45:44Z"
        }
      ]
    },
    {
      "issueid": "DD-498",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Mission Planning supports synchronized waits",
        "description": "When a UAV is executing flight plans and reaches a synchronization point,  which is followed by a delay task, it shall wait to proceed until the delay specified in seconds is expired"
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/JSONMissionPlanReader.java",
          "timestamp": "2018-04-11T17:42:53Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/plan/FullMissionPlan.java",
          "timestamp": "2018-04-11T17:42:53Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/plan/UAVMissionPlan.java",
          "timestamp": "2018-05-11T00:31:10Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/tasks/DelayTask.java",
          "timestamp": "2018-04-11T17:42:53Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/tasks/DelayTask.java",
          "timestamp": "2018-05-11T00:31:10Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/tasks/TaskFactory.java",
          "timestamp": "2018-04-11T17:42:53Z"
        }
      ]
    },
    {
      "issueid": "CO-484",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "Stop In Place",
        "description": "Simple collision avoidance implementation that stops UAVs when they violate a minimum safety distance."
      },
      "children": {
        "contains": [
          "DD-569"
        ]
      },
      "code": []
    },
    {
      "issueid": "CO-481",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "Object Avoidance",
        "description": "Collision Avoidance API and general services"
      },
      "children": {
        "contains": [
          "DD-564",
          "DD-565",
          "DD-566",
          "DD-567",
          "DD-568",
          "RE-124",
          "RE-125",
          "RE-126",
          "RE-127"
        ]
      },
      "code": []
    },
    {
      "issueid": "CO-480",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "Flight Patterns",
        "description": "Provides capabilities for creating and executing complex flight patters for multiple UAVs"
      },
      "children": {
        "contains": [
          "RE-562",
          "RE-563"
        ]
      },
      "code": []
    },
    {
      "issueid": "CO-477",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "Single UAV Flight Plan Scheduler",
        "description": "Single UAV flight plan assignments (taking an existing route,  instantiating it,  and assigning to a UAV)"
      },
      "children": {
        "contains": [
          "DD-27",
          "DD-548",
          "DD-550",
          "DD-552",
          "DD-553",
          "DD-554",
          "DD-556",
          "DD-557",
          "DD-559",
          "DD-560",
          "DD-561",
          "DD-81",
          "DD-84",
          "DD-85",
          "DD-87",
          "RE-100",
          "RE-101",
          "RE-103",
          "RE-28",
          "RE-547",
          "RE-549",
          "RE-551",
          "RE-555",
          "RE-558",
          "RE-86"
        ]
      },
      "code": []
    },
    {
      "issueid": "CO-476",
      "attributes": {
        "issuetype": "Feature",
        "status": "Closed",
        "summary": "Mission Planning",
        "description": "Provides capabilities for executing missions with multiple UAVs"
      },
      "children": {
        "contains": [
          "DD-362",
          "DD-468",
          "DD-498",
          "DD-536",
          "DD-537",
          "DD-538",
          "DD-540",
          "DD-542",
          "DD-543",
          "DD-544",
          "DD-546",
          "RE-541",
          "RE-545",
          "RE-759"
        ]
      },
      "code": []
    },
    {
      "issueid": "CO-475",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "Flight Scheduling and Execution",
        "description": "Provides capabilities for executing flights assigned to a UAV."
      },
      "children": {
        "contains": [
          "DD-532",
          "DD-533",
          "DD-534",
          "DD-535",
          "RE-531"
        ]
      },
      "code": []
    },
    {
      "issueid": "CO-474",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "Flight Manager",
        "description": "Provides basic flight related capabilities for UAVs."
      },
      "children": {
        "contains": [
          "DD-520",
          "DD-522",
          "DD-524",
          "DD-526",
          "RE-424",
          "RE-521",
          "RE-523",
          "RE-525"
        ]
      },
      "code": []
    },
    {
      "issueid": "CO-473",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "Coordinate System",
        "description": "Provides 3 dimensional coordinate system currently based on longitude,  latitude,  and altitude.   Provides conversion between various coordinate systems."
      },
      "children": {
        "contains": [
          "DD-177",
          "DD-23",
          "DD-24",
          "DD-511",
          "DD-512",
          "DD-513",
          "DD-514",
          "DD-515",
          "DD-518",
          "DD-519",
          "RE-510",
          "RE-516",
          "RE-517",
          "RE-77"
        ]
      },
      "code": []
    },
    {
      "issueid": "CO-472",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "Flight Route Manager",
        "description": "Provides capabilities for creating and managing flight routes within Dronology."
      },
      "children": {
        "contains": [
          "DD-502",
          "DD-504",
          "DD-506",
          "DD-507",
          "DD-509",
          "DD-75",
          "RE-501",
          "RE-503",
          "RE-505",
          "RE-508"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-468",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Import saved Mission Plans",
        "description": "The MissionPlanner shall provide an interface to support the execution of predefined missions specified in JSON."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/monitoring/messages/UAVMonitorableMessage.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/IUAVProxy.java",
          "timestamp": "2018-03-07T23:03:57Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/ManagedDrone.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/CommandIds.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/EmergencyStopCommand.java",
          "timestamp": "2018-03-12T16:36:14Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/proxy/UAVProxy.java",
          "timestamp": "2018-03-07T23:03:57Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/WriteDispatcher.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.monitoring.reminds/src/edu/nd/dronology/test/MonitoringConnectionTester.java",
          "timestamp": "2018-03-07T23:03:57Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.monitoring.simplechecker/src/edu/nd/dronology/monitoring/simplechecker/checker/CollisionInfo.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.monitoring.simplechecker/src/edu/nd/dronology/monitoring/simplechecker/checker/DistanceChecker.java",
          "timestamp": "2018-03-12T16:36:14Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.monitoring.simplechecker/src/edu/nd/dronology/monitoring/simplechecker/checker/SimpleCheckerMessageHandler.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.monitoring.simplechecker/src/edu/nd/dronology/monitoring/simplechecker/monitor/SimpleMonitor.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IMissionPlanningRemoteService.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/util/ServiceIds.java",
          "timestamp": "2018-03-07T23:03:57Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/MissionPlanningServiceRemoteFacade.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerService.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerServiceInstance.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/IFlightManagerServiceInstance.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/missionplanning/IMissionPlanningServiceInstance.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/missionplanning/MissionPlanningService.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/missionplanning/MissionPlanningService.java",
          "timestamp": "2018-05-10T23:31:13Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/missionplanning/MissionPlanningServiceInstance.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/missionplanning/MissionPlanningServiceInstance.java",
          "timestamp": "2018-05-10T23:31:13Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/JSONMissionPlanReader.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/MissionExecutionException.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/patterns/AbstractFlightPattern.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/patterns/CoordinatedLandingPattern.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/patterns/CoordinatedTakeoffPattern.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/patterns/IFlightPattern.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/patterns/PatternFactory.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/patterns/TaskList.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/plan/FullMissionPlan.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/plan/MissionController.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/plan/MissionController.java",
          "timestamp": "2018-05-10T23:31:13Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/plan/MissionUtil.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/plan/UAVMissionPlan.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/sync/SyncConstants.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/sync/SynchronizationManager.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/sync/SynchronizationPoint.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/sync/SynchronizationState.java",
          "timestamp": "2018-03-07T23:03:57Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/tasks/AbstractMissionTask.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/tasks/IMissionTask.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/tasks/LandTask.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/tasks/PatternTask.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/tasks/RouteTask.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/tasks/SyncTask.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/tasks/TakeoffTask.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/tasks/TaskFactory.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/tasks/WaypointTask.java",
          "timestamp": "2018-03-09T00:52:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/remote/RemoteManager.java",
          "timestamp": "2018-03-07T23:03:57Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoPanel.java",
          "timestamp": "2018-03-07T23:03:57Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMainLayout.java",
          "timestamp": "2018-03-07T23:03:57Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapViewOperations.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMissionOperations.java",
          "timestamp": "2018-03-12T16:33:50Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/MissionHandler.java",
          "timestamp": "2018-03-07T23:03:57Z"
        }
      ]
    },
    {
      "issueid": "DD-445",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Monitoring API",
        "description": "The DronologyRuntimeMonitor shall allow to publish arbitrary monitoring messages and subscribe to certain message types"
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/PhysicalDroneFleetFactory.java",
          "timestamp": "2018-02-15T17:17:51Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/VirtualDroneFleetFactory.java",
          "timestamp": "2018-02-15T17:15:33Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/IFlightPlan.java",
          "timestamp": "2018-02-15T17:15:33Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPoolManager.java",
          "timestamp": "2018-02-15T17:16:08Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/FlightPlan.java",
          "timestamp": "2018-02-15T17:15:33Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/SimpleTakeoffFlightPlan.java",
          "timestamp": "2018-03-01T18:41:59Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/monitoring/ArtifactIdentifier.java",
          "timestamp": "2018-03-02T16:53:32Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/monitoring/ArtifactIdentifier.java",
          "timestamp": "2018-05-10T23:29:53Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/monitoring/DronologyMonitoringManager.java",
          "timestamp": "2018-03-02T16:53:32Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/monitoring/DronologyMonitoringManager.java",
          "timestamp": "2018-05-10T23:29:53Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/monitoring/IMonitorableMessage.java",
          "timestamp": "2018-02-15T17:11:15Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/monitoring/IMonitoringDataHandler.java",
          "timestamp": "2018-02-15T17:11:15Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/monitoring/MessageMarshaller.java",
          "timestamp": "2018-03-02T16:53:32Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/monitoring/messages/UAVMonitorableMessage.java",
          "timestamp": "2018-03-02T16:53:32Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/monitoring/messages/UAVPlanChangeMessage.java",
          "timestamp": "2018-02-15T17:11:15Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/monitoring/messages/UAVStateChangeMessage.java",
          "timestamp": "2018-02-15T17:11:15Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/DroneFlightStateManager.java",
          "timestamp": "2018-03-02T16:53:32Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/ManagedDrone.java",
          "timestamp": "2018-02-15T17:15:33Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/AbstractDroneCommand.java",
          "timestamp": "2018-02-15T17:11:15Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/PhysicalDrone.java",
          "timestamp": "2018-03-02T16:53:32Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/GroundstationConnector.java",
          "timestamp": "2018-02-15T17:15:33Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/connect/IncommingGroundstationConnectionServer.java",
          "timestamp": "2018-02-15T17:11:15Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/DispatchQueueManager.java",
          "timestamp": "2018-02-15T17:11:15Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/MonitoringDispatchThread.java",
          "timestamp": "2018-02-15T17:15:33Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/messages/AbstractUAVMessage.java",
          "timestamp": "2018-02-15T17:11:15Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/messages/StateMessageTypeAdapter.java",
          "timestamp": "2018-03-02T16:53:32Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/messages/UAVAcknowledgeMessage.java",
          "timestamp": "2018-02-15T17:11:15Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/service/connector/DroneConnectorService.java",
          "timestamp": "2018-02-15T17:11:15Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/service/connector/DroneConnectorServiceInstance.java",
          "timestamp": "2018-02-15T17:11:15Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/service/connector/IDroneConnectorServiceInstance.java",
          "timestamp": "2018-02-15T17:15:33Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.monitoring.reminds/src/edu/nd/dronology/monitoring/reminds/RemindsConnector.java",
          "timestamp": "2018-03-02T16:53:32Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.monitoring.reminds/src/edu/nd/dronology/monitoring/reminds/RemoteMessageHandler.java",
          "timestamp": "2018-03-02T16:53:32Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.monitoring.reminds/src/edu/nd/dronology/test/MonitoringConnectionTester.java",
          "timestamp": "2018-03-02T16:53:32Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/IRemoteMonitoringMessageHandler.java",
          "timestamp": "2018-03-02T16:53:32Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/IRemoteMonitoringMessageHandler.java",
          "timestamp": "2018-05-10T23:29:53Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/SendToSubscriberCallable.java",
          "timestamp": "2018-03-02T16:53:32Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/service/DroneMonitoringService.java",
          "timestamp": "2018-03-02T16:53:32Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/service/DroneMonitoringService.java",
          "timestamp": "2018-05-10T23:29:53Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/service/DroneMonitoringServiceInstance.java",
          "timestamp": "2018-03-02T16:53:32Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.monitoring/src/edu/nd/dronology/monitoring/service/IDroneMonitoringServiceInstance.java",
          "timestamp": "2018-03-02T16:53:32Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.launch/src/edu/nd/dronology/services/launch/DronologyServiceRunner.java",
          "timestamp": "2018-03-02T16:53:32Z"
        }
      ]
    },
    {
      "issueid": "DD-439",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Multiple Map Layers",
        "description": "The open street map component shall support multiple map providers."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMainLayout.java",
          "timestamp": "2017-11-21T13:36:20Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2017-11-21T13:36:20Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2017-11-21T13:36:20Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/map/LeafletmapFactory.java",
          "timestamp": "2017-11-21T13:36:20Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/map/LeafletmapFactory.java",
          "timestamp": "2018-05-11T02:25:56Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/map/VaadinUIMapConstants.java",
          "timestamp": "2017-11-21T13:36:20Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/LayerDescriptor.java",
          "timestamp": "2017-11-21T13:36:20Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/LayerDescriptor.java",
          "timestamp": "2018-05-11T02:25:56Z"
        }
      ]
    },
    {
      "issueid": "RE-424",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Return To Home without detours",
        "description": "When the return to home command is issued,  the FlightManager shall return the UAV to its original launch location without issuing any additional waypoint or routing commands."
      },
      "children": {
        "refinedby": [
          "DD-520"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-421",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Change color for the first and the last waypoint",
        "description": "Waypoints in a flight route shall be colored so as to differentiate between the starting waypoint,  ending waypoint , and all remaining intermediate waypoints."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2017-08-01T17:23:58Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2018-05-10T23:26:46Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2017-08-01T17:29:04Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2018-05-10T23:26:46Z"
        }
      ]
    },
    {
      "issueid": "DD-362",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Coordinate synchronous flights in Mission Planner",
        "description": "The MissionPlanner shall synchronize and coordinate the flights of multiple UAVs."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/mission/IMissionPlan.java",
          "timestamp": "2017-07-18T12:35:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/mission/MissionPlan.java",
          "timestamp": "2017-07-18T12:35:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IFlightManagerRemoteService.java",
          "timestamp": "2017-07-18T12:46:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/FlightManagerServiceRemoteFacade.java",
          "timestamp": "2017-07-18T12:46:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerService.java",
          "timestamp": "2017-07-18T12:46:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerServiceInstance.java",
          "timestamp": "2017-07-18T12:46:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/IFlightManagerServiceInstance.java",
          "timestamp": "2017-07-18T12:46:24Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/plan/FullMissionPlan.java",
          "timestamp": "2018-05-10T23:24:21Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/missionplanning/plan/UAVMissionPlan.java",
          "timestamp": "2018-05-10T23:24:21Z"
        }
      ]
    },
    {
      "issueid": "DD-361",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "GCS connection to GCS Middleware",
        "description": "In step one,  the GCS announces itself to the GCSMiddleware providing its unique ID."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/AbstractDroneCommand.java",
          "timestamp": "2017-07-18T12:30:13Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/CommandIds.java",
          "timestamp": "2017-07-18T12:30:13Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/GoToCommand.java",
          "timestamp": "2017-07-18T12:30:13Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/IDroneCommand.java",
          "timestamp": "2017-07-18T12:30:13Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetGimbalRotationCommand.java",
          "timestamp": "2017-07-18T12:30:13Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetGimbalTargetCommand.java",
          "timestamp": "2017-07-18T12:30:13Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetGroundSpeedCommand.java",
          "timestamp": "2017-07-18T12:30:13Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetMonitoringFrequencyCommand.java",
          "timestamp": "2017-07-18T12:30:13Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetStateFrequencyCommand.java",
          "timestamp": "2017-07-18T12:30:13Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetVelocityCommand.java",
          "timestamp": "2017-07-18T12:30:13Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/TakeoffCommand.java",
          "timestamp": "2017-07-18T12:30:13Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/GroundstationConnector.java",
          "timestamp": "2018-05-10T23:15:21Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/messages/ConnectionRequestMessage.java",
          "timestamp": "2018-05-10T23:15:21Z"
        }
      ]
    },
    {
      "issueid": "DD-354",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Multiple groundstations can register with Dronology",
        "description": "The GCSMiddleware shall handle multiple GCS at the same time."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/PhysicalDroneFleetFactory.java",
          "timestamp": "2017-07-18T12:38:46Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/RuntimeDroneTypes.java",
          "timestamp": "2017-07-18T12:38:46Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/GroundstationConnector.java",
          "timestamp": "2018-05-11T02:27:52Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/DispatchQueueManager.java",
          "timestamp": "2018-05-11T02:27:52Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.launch/src/edu/nd/dronology/services/launch/DronologyServiceRunner.java",
          "timestamp": "2017-07-14T20:47:45Z"
        }
      ]
    },
    {
      "issueid": "DD-352",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Transmit new route assignments to UI Middleware",
        "description": "When routes are assigned to a UAV a request shall be sent to the UIMiddleware to update the assignment in Dronology."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPool.java",
          "timestamp": "2017-07-20T18:48:20Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPoolManager.java",
          "timestamp": "2017-07-20T18:48:20Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2017-07-20T18:48:20Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IFlightManagerRemoteService.java",
          "timestamp": "2017-07-20T18:48:20Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/FlightManagerServiceRemoteFacade.java",
          "timestamp": "2017-07-20T18:48:20Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerService.java",
          "timestamp": "2017-07-20T18:48:20Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerServiceInstance.java",
          "timestamp": "2017-07-20T18:48:20Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/IFlightManagerServiceInstance.java",
          "timestamp": "2017-07-20T18:48:20Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFAssignRouteComponent.java",
          "timestamp": "2017-07-20T18:48:20Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFAssignRouteComponent.java",
          "timestamp": "2018-05-10T23:13:37Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFDragLayout.java",
          "timestamp": "2017-07-19T18:26:25Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoBox.java",
          "timestamp": "2017-07-20T18:48:20Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/connector/DronologyActionExecutor.java",
          "timestamp": "2018-05-10T23:13:37Z"
        }
      ]
    },
    {
      "issueid": "RE-235",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Allow reconnection of GCS to the UAV after disconnecting",
        "description": "When the GCS loses the connection to an UAV,  the GCS shall attempt to reconnect"
      },
      "children": {
        "refinedby": [
          "DD-749",
          "DD-750"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-229",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Display active route details",
        "description": "The UI shall display the waypoints and their connections."
      },
      "children": {
        "subtasks": [
          "ST-245"
        ]
      },
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2017-06-22T14:09:53Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2018-05-10T23:11:47Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/MapDrawingUtil.java",
          "timestamp": "2018-05-10T23:11:47Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/start/MyUI.java",
          "timestamp": "2017-06-21T18:22:27Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2017-06-21T18:22:27Z"
        }
      ]
    },
    {
      "issueid": "DD-213",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Log all GCS related events",
        "description": "All commands sent to and messages received from a CGC shall be logged to a dedicated GCS log file"
      },
      "children": {
        "refinedby": [
          "DD-617",
          "DD-618",
          "DD-619"
        ]
      },
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/AbstractDroneCommand.java",
          "timestamp": "2017-06-18T01:26:12Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/DispatchQueueManager.java",
          "timestamp": "2018-05-10T22:50:33Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/ReadDispatcher.java",
          "timestamp": "2018-05-01T20:42:23Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/ReadDispatcher.java",
          "timestamp": "2018-05-10T22:50:33Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.gstation.python.connector/src/edu/nd/dronology/gstation/connector/dispatch/WriteDispatcher.java",
          "timestamp": "2018-05-10T22:50:33Z"
        },
        {
          "status": "#github",
          "filename": "net.mv.logging/src/main/java/net/mv/logging/ILogger.java",
          "timestamp": "2018-05-01T14:38:36Z"
        },
        {
          "status": "#github",
          "filename": "net.mv.logging/src/main/java/net/mv/logging/LoggerAppenderAdapter.java",
          "timestamp": "2018-05-01T14:38:36Z"
        },
        {
          "status": "#github",
          "filename": "net.mv.logging/src/main/java/net/mv/logging/log4j2/Log4JLogForwarder.java",
          "timestamp": "2018-05-01T14:38:36Z"
        },
        {
          "status": "#github",
          "filename": "net.mv.logging/src/main/java/net/mv/logging/log4j2/Log4Jv2Logger.java",
          "timestamp": "2018-05-01T14:38:36Z"
        },
        {
          "status": "#github",
          "filename": "net.mv.logging/src/main/java/net/mv/logging/log4j2/Log4jv2RootLogger.java",
          "timestamp": "2018-05-01T14:38:36Z"
        }
      ]
    },
    {
      "issueid": "CO-184",
      "attributes": {
        "issuetype": "Feature",
        "status": "Closed",
        "summary": "Internal Simulator",
        "description": "The internal simulator provides low-fidelity features for supporting quick initial tests of a virtual UAV.  Features include takeoff,  goto,  land,  and battery health.  "
      },
      "children": {
        "contains": [
          "RE-593",
          "RE-594",
          "RE-595",
          "RE-596",
          "RE-597"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-177",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "WGS-84 position reckoning",
        "description": "Position reckoning shall utilize the WGS-84 reference system."
      },
      "children": {
        "subtasks": [
          "ST-178",
          "ST-179",
          "ST-180",
          "ST-259",
          "ST-260",
          "ST-261",
          "ST-262",
          "ST-278",
          "ST-286"
        ]
      },
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/DronologyConstants.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/IUAVPropertyUpdateNotifier.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/coordinate/AbstractPosition.java",
          "timestamp": "2018-05-11T00:32:09Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/coordinate/LlaCoordinate.java",
          "timestamp": "2018-05-11T00:32:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/exceptions/DroneException.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/DroneFleetManager.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/PhysicalDroneFleetFactory.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/RuntimeDroneTypes.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/FlightPlanFactory.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/IFlightPlan.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/IPlanStatusChangeListener.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPool.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPoolManager.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/FlightPlan.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/SoloDirector.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/mission/IMissionPlan.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/mission/MissionPlan.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/SimulatorFactory.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/nvecsimulator/NvecInterpolator.java",
          "timestamp": "2017-07-14T22:26:34Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/unused/FlightZoneManager.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/unused/Flights.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/util/DummyLockObject.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/util/ManagedHashTableList.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/util/Waypoint.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/AbstractDrone.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/DroneFlightStateManager.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/IDrone.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/IDroneCommandHandler.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/IManagedDroneStateChangeListener.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/ManagedDrone.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/AbstractDroneCommand.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/CommandIds.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/GoToCommand.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/IDroneCommand.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetGimbalRotationCommand.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetGimbalTargetCommand.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetGroundSpeedCommand.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetMonitoringFrequencyCommand.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetStateFrequencyCommand.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/SetVelocityCommand.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/TakeoffCommand.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/PhysicalDrone.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/VirtualDrone.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/uav/IStartstrategy.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/uav/IStopStrategy.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/uav/LandingStrategy.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/simulator/nvecsimulator/NvecInterpolatorTest.java",
          "timestamp": "2017-07-14T22:26:34Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/utilities/TestAbstractPosition.java",
          "timestamp": "2017-07-24T23:46:27Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/utilities/TestLlaCoordinate.java",
          "timestamp": "2017-07-24T23:46:27Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/utilities/TestNVector.java",
          "timestamp": "2017-07-14T22:26:34Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/info/DroneInitializationInfo.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/info/FlightInfo.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/info/FlightPlanInfo.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/info/FlightRouteInfo.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/items/FlightRoute.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/items/IFlightRoute.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/message/InfoNotification.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/persistence/DronologyPersistenceUtil.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IDroneSetupRemoteService.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IFlightManagerRemoteService.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IRemoteManager.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/util/DronologyConstants.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/util/FileManager.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/util/WatchServiceRunner.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.launch/src/edu/nd/dronology/services/launch/DronologyServiceRunner.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.launch/src/edu/nd/dronology/services/launch/FlyingFieldDemoScript.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/DroneSetupService.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/DroneSetupServiceInstance.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/IDroneSetupServiceInstance.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/DroneSetupServiceRemoteFacade.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/FlightManagerServiceRemoteFacade.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/info/RemoteInfoFactory.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/dronesimulator/DroneSimulatorServiceInstance.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightInfoCreator.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerService.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerServiceInstance.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightMissionManager.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/IFlightManagerServiceInstance.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightroute/FlightRouteplanningServiceInstance.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/remote/RemoteManager.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/remote/rmi/RemoteRMIRemoteObject.java",
          "timestamp": "2017-07-24T23:46:19Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/supervisor/WorkspaceInitializer.java",
          "timestamp": "2017-07-24T23:46:19Z"
        }
      ]
    },
    {
      "issueid": "DD-168",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Display a list of existing routes",
        "description": "Upon loading,  the UI requests all existing routes from the UIMiddleware. Once the UIMiddleware respond to the request,  the UI displays all existing routes"
      },
      "children": {
        "subtasks": [
          "ST-216",
          "ST-219"
        ]
      },
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRControlsComponent.java",
          "timestamp": "2017-06-16T13:04:14Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRInfoBox.java",
          "timestamp": "2017-06-15T19:55:57Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRInfoPanel.java",
          "timestamp": "2017-06-15T19:55:57Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRInfoPanel.java",
          "timestamp": "2018-05-10T22:48:13Z"
        }
      ]
    },
    {
      "issueid": "RE-161",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "UAV activation",
        "description": "The UAVActivationManager shall only activate UAVs that are registered."
      },
      "children": {
        "refinedby": [
          "DD-584",
          "DD-585",
          "DD-586"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-160",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Activation of an additional UAV detected by the GCS",
        "description": "When a GCS requests activation of a newly detected UAV, the GCSMiddleware shall forward the request to Dronology."
      },
      "children": {
        "refinedby": [
          "DD-718",
          "DD-719",
          "DD-720",
          "DD-721"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-127",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Onboard obstacle avoidance",
        "description": "When a UAV has an active onboard Obstacle Avoidance, then the ObstacleAvoidance system shall not issue directives"
      },
      "children": {
        "refinedby": [
          "DD-564",
          "DD-566"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-126",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Collision avoidance activation",
        "description": "The ObjectAvoidance system only issues commands within the capabilities of the UAV"
      },
      "children": {
        "refinedby": [
          "DD-565"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-125",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Reach destination while avoiding  objects",
        "description": "If a UAV takes evasive actions the system will ensure that it will eventually reach its destination"
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "RE-124",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Object Avoidance",
        "description": "When a stationary or moving object is within the proximity of a UAV the ObjectAvoidance system shall issue evasive directives to the UAV"
      },
      "children": {
        "refinedby": [
          "DD-567",
          "DD-568",
          "DD-569"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-122",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Load configuration",
        "description": "Configuration parameters including map coordinates scale, map style, and color scheme shall be stored in a JSON Object on the server"
      },
      "children": {
        "subtasks": [
          "ST-132"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/start/MyUI.java",
          "timestamp": "2018-05-11T01:56:21Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/Configuration.java",
          "timestamp": "2017-06-09T19:14:06Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/Configuration.java",
          "timestamp": "2018-05-11T01:55:48Z"
        }
      ]
    },
    {
      "issueid": "DD-121",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Update UAV location frequency",
        "description": "The UAV location shall be updated on the map at the currently defined UI UAV REFRESH RATE"
      },
      "children": {
        "subtasks": [
          "ST-182",
          "ST-232"
        ]
      },
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMainLayout.java",
          "timestamp": "2017-06-20T20:10:23Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2017-06-20T20:10:23Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/start/MyUI.java",
          "timestamp": "2017-06-20T20:10:23Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/start/MyUI.java",
          "timestamp": "2018-05-10T22:36:42Z"
        }
      ]
    },
    {
      "issueid": "RE-120",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Real-Time Flight UI",
        "description": "The RealTimeFlightUI shall display the location of active UAVs as icons on the map."
      },
      "children": {
        "refinedby": [
          "DD-121",
          "DD-685",
          "DD-686",
          "DD-687",
          "DD-688"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-119",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Load default coordinates",
        "description": "Unless otherwise configured in the configuration parameters, the map shall be centered at White Field, University of Notre Dame, South Bend IN."
      },
      "children": {
        "subtasks": [
          "ST-186"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2018-05-11T01:59:53Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/Configuration.java",
          "timestamp": "2017-06-13T13:40:20Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/Configuration.java",
          "timestamp": "2018-05-11T01:59:53Z"
        }
      ]
    },
    {
      "issueid": "DD-118",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Load saved map scale",
        "description": "When loading the map, it shall be scaled as specified in the configuration."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2018-05-11T01:59:53Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/Configuration.java",
          "timestamp": "2018-05-11T01:59:53Z"
        }
      ]
    },
    {
      "issueid": "DD-117",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Load default map scale",
        "description": "If no scale information is provided in the configuration, the map shall display at a scale of MAP DEFAULT SCALE."
      },
      "children": {
        "subtasks": [
          "ST-185"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2018-05-11T01:59:53Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/Configuration.java",
          "timestamp": "2017-06-13T13:40:20Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/Configuration.java",
          "timestamp": "2018-05-11T01:59:53Z"
        }
      ]
    },
    {
      "issueid": "RE-114",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Display map in UI",
        "description": "When the RealTimeFlightUI is loaded,  a map shall be displayed."
      },
      "children": {
        "refinedby": [
          "DD-684"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-113",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Display state of activated UAVs",
        "description": "The name,  state,  battery level,  speed,  and current coordinates of each UAV shall be displayed."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFControlsComponent.java",
          "timestamp": "2017-06-13T19:26:53Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFEmergencyComponent.java",
          "timestamp": "2017-06-16T03:07:57Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoBox.java",
          "timestamp": "2017-06-14T18:32:04Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoBox.java",
          "timestamp": "2018-05-10T22:34:32Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoPanel.java",
          "timestamp": "2017-06-16T03:07:57Z"
        }
      ]
    },
    {
      "issueid": "RE-112",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "UI binding to a UAV",
        "description": "If a command is issued by the VaadinUI for an UAV,  the VaadinUI shall request control of that UAV."
      },
      "children": {
        "refinedby": [
          "DD-644"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-110",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "UAV controlled by only one UI client at a time",
        "description": "The UIMiddleware shall only assign one control-client at a time for each UAV."
      },
      "children": {
        "refinedby": [
          "DD-622",
          "DD-623",
          "DD-624",
          "DD-625"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-108",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "UI middleware accepts registrations",
        "description": "The UIMiddleware shall provide an interface for registering UI clients."
      },
      "children": {
        "refinedby": [
          "DD-621"
        ]
      },
      "code": []
    },
    {
      "issueid": "CO-105",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "UI Real-Time Flight View",
        "description": "Manages all aspects of displaying flights and UAVs in real-time and interacting with them.  The flight view displays active routes,  UAV coordinates,  and their current health.  The map uses zoom and panning features to follow one or more selected UAV."
      },
      "children": {
        "contains": [
          "DD-113",
          "DD-121",
          "DD-229",
          "DD-682",
          "DD-683",
          "DD-684",
          "DD-685",
          "DD-686",
          "DD-687",
          "DD-688",
          "DD-690",
          "DD-692",
          "DD-694",
          "DD-696",
          "DD-697",
          "DD-699",
          "RE-114",
          "RE-120",
          "RE-681",
          "RE-689",
          "RE-691",
          "RE-693",
          "RE-695",
          "RE-698"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-104",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Log flight plans and waypoints reached",
        "description": "All flight plans executed and waypoints reached shall be logged to a dedicated flight log file."
      },
      "children": {
        "refinedby": [
          "DD-612",
          "DD-613",
          "DD-614"
        ]
      },
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/FlightPlan.java",
          "timestamp": "2018-05-10T22:33:28Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/ManagedDrone.java",
          "timestamp": "2017-07-05T12:16:38Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/ManagedDrone.java",
          "timestamp": "2018-05-10T22:33:28Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/PhysicalDrone.java",
          "timestamp": "2018-05-10T22:33:28Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "net.mv.logging/src/main/java/net/mv/logging/ILogger.java",
          "timestamp": "2018-05-10T22:33:28Z"
        }
      ]
    },
    {
      "issueid": "RE-103",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Remove pending plans when return-to-home",
        "description": "When a  UAVs current flight is cancelled,  the SingleUAVFlightPlanScheduler shall in turn cancel all scheduled flight plans for that UAV."
      },
      "children": {
        "refinedby": [
          "DD-553"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-101",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Assigning new flight plan upon completion of previous flight",
        "description": "If a UAV has pending flight plans,  then when it reaches the final waypoint of its current flight plan,  the SingleUAVFlightPlanScheduler shall execute the next assigned flight plan."
      },
      "children": {
        "refinedby": [
          "DD-554"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-100",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Removal of planned flight",
        "description": "If requested,  the SingleUAVFlightPlanScheduler shall unassign the flight plan assigned to a UAV that is awaiting execution."
      },
      "children": {
        "refinedby": [
          "DD-87"
        ]
      },
      "code": []
    },
    {
      "issueid": "CO-91",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "GCS",
        "description": "Python based system that manages and controls UAVs.  Communicates with Dronology via the Ground Station middleware. Each GCS is responsible for communicating directly with each UAV,  sending it commands and monitoring its state including its current position,  flight mode,  and  health."
      },
      "children": {
        "contains": [
          "DD-740",
          "DD-742",
          "DD-743",
          "DD-744",
          "DD-745",
          "DD-747",
          "DD-748",
          "DD-749",
          "DD-750",
          "DD-752",
          "DD-753",
          "DD-755",
          "DD-756",
          "DD-757",
          "RE-235",
          "RE-739",
          "RE-741",
          "RE-746",
          "RE-751",
          "RE-754"
        ]
      },
      "code": []
    },
    {
      "issueid": "CO-90",
      "attributes": {
        "issuetype": "Feature",
        "status": "Open",
        "summary": "GCS Middleware",
        "description": "Handles connections between Dronology and Ground Control Stations (GCS). Forwards commands,  monitoring,  and other messages from Dronology to its registered GCS and passes messages describing the state of the UAVs managed by each GCS back to dronology."
      },
      "children": {
        "contains": [
          "DD-354",
          "DD-361",
          "DD-710",
          "DD-711",
          "DD-712",
          "DD-713",
          "DD-715",
          "DD-716",
          "DD-718",
          "DD-719",
          "DD-720",
          "DD-721",
          "DD-723",
          "DD-724",
          "DD-727",
          "DD-728",
          "DD-730",
          "DD-731",
          "DD-732",
          "DD-733",
          "DD-734",
          "DD-735",
          "DD-737",
          "DD-763",
          "DD-768",
          "RE-160",
          "RE-709",
          "RE-714",
          "RE-722",
          "RE-729",
          "RE-736"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-87",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Remove flight plan from queue",
        "description": "A flight plan shall be unassigned from a UAV by removing it from the  UAVs flight plan queue."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPool.java",
          "timestamp": "2018-05-11T01:21:52Z"
        }
      ]
    },
    {
      "issueid": "RE-86",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "Managed flight plan queue",
        "description": "The SingleUAVFlightPlanScheduler shall maintain a managed list of pending flight plans for Each UAV."
      },
      "children": {
        "refinedby": [
          "DD-27",
          "DD-84",
          "DD-85"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-85",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Reordering of  UAVs flight queue",
        "description": "The pending flight plans of a UAV may be reordered"
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-84",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Default sequencing of  UAVs flight plans",
        "description": "By default,  the pending flight plans of a  UAVs shall be serviced in FCFS order."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPoolManager.java",
          "timestamp": "2018-05-08T03:35:03Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2018-05-08T03:35:03Z"
        }
      ]
    },
    {
      "issueid": "DD-81",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Hover at completion of flight",
        "description": "If the flight plan queue is empty when the UAV reaches the final waypoint of its current flight plan,  then its state is set to IN AIR."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/exceptions/DroneException.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/DroneFleetManager.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/FlightPlanFactory.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/IFlightPlan.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/IPlanStatusChangeListener.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPool.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPoolManager.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/FlightPlan.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/SoloDirector.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/SoloDirector.java",
          "timestamp": "2018-05-11T01:23:27Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/util/DummyLockObject.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/util/ManagedHashTableList.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/util/Waypoint.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/DroneFlightStateManager.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/IManagedDroneStateChangeListener.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/PhysicalDrone.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/VirtualDrone.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/uav/IStartstrategy.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/uav/IStopStrategy.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/uav/LandingStrategy.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/info/DroneInitializationInfo.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/info/FlightInfo.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IDroneSetupRemoteService.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IFlightManagerRemoteService.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.launch/src/edu/nd/dronology/services/launch/DronologyServiceRunner.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/DroneSetupService.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/DroneSetupServiceInstance.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/IDroneSetupServiceInstance.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/DroneSetupServiceRemoteFacade.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/FlightManagerServiceRemoteFacade.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/info/RemoteInfoFactory.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/dronesimulator/DroneSimulatorServiceInstance.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightInfoCreator.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerService.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerServiceInstance.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/IFlightManagerServiceInstance.java",
          "timestamp": "2017-07-05T12:15:24Z"
        }
      ]
    },
    {
      "issueid": "RE-80",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Visiting waypoints during flight plan ",
        "description": "When a flight plan is executed,  the VehicleCore shall send the next waypoint to the UAV."
      },
      "children": {
        "refinedby": [
          "DD-527",
          "DD-528",
          "DD-529",
          "DD-530"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-77",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Waypoint definition",
        "description": "Each waypoint shall be specified using coordinates that include longitude,  latitude,  and altitude."
      },
      "children": {
        "refinedby": [
          "DD-177",
          "DD-23",
          "DD-24"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-75",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Upload externally created flight route",
        "description": "Flight routes shall be created externally and uploaded to Dronology via the UI middleware."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/util/Waypoint.java",
          "timestamp": "2017-07-07T12:51:30Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/info/FlightRouteInfo.java",
          "timestamp": "2017-07-07T12:51:30Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/items/FlightRoute.java",
          "timestamp": "2017-07-07T12:51:30Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/items/IFlightRoute.java",
          "timestamp": "2017-07-07T12:51:30Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/persistence/DronologyPersistenceUtil.java",
          "timestamp": "2017-07-07T12:51:30Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/FlightRouteplanningServiceRemoteFacade.java",
          "timestamp": "2018-05-10T22:30:21Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/dronesimulator/DroneSimulatorServiceInstance.java",
          "timestamp": "2017-07-07T12:56:09Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightroute/FlightRouteplanningService.java",
          "timestamp": "2018-05-10T22:30:21Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightroute/FlightRouteplanningServiceInstance.java",
          "timestamp": "2017-07-07T12:51:30Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightroute/FlightRouteplanningServiceInstance.java",
          "timestamp": "2018-05-10T22:30:21Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightroute/IFlightRouteplanningServiceInstance.java",
          "timestamp": "2018-05-10T22:30:21Z"
        }
      ]
    },
    {
      "issueid": "RE-38",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "UAV type specification assignment",
        "description": "The VehicleCore shall associate a UAV TYPE for each UAV defining its basic attributes."
      },
      "children": {
        "refinedby": [
          "DD-571"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-36",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "Only one instance of each registered drone may be active any any time",
        "description": "The UAVActivationManager shall ensure that only one instance of each registered drone is active at any time."
      },
      "children": {
        "refinedby": [
          "DD-583"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-33",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Transition from FLYING to IN AIR",
        "description": "When a UAV is in FLYING state and has no currently executing flight plan it transitions to IN AIR"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/SoloDirector.java",
          "timestamp": "2018-05-08T03:49:22Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2018-05-08T03:49:22Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/DroneFlightStateManager.java",
          "timestamp": "2018-05-08T03:49:22Z"
        }
      ]
    },
    {
      "issueid": "DD-32",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Transition from TAKING OFF to FLYING",
        "description": "When a UAV in the TAKING OFF state achieves the target altitude it transitions to FLYING state."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2018-05-08T03:48:35Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/DroneFlightStateManager.java",
          "timestamp": "2018-05-08T03:48:35Z"
        }
      ]
    },
    {
      "issueid": "DD-31",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Transition from AWAITING CLEARANCE to TAKING OFF",
        "description": "When permission is granted to UAV in the AWAITING TAKEOFF CLEARANCE state it transitions to TAKING OFF state."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2018-05-08T03:48:35Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/DroneFlightStateManager.java",
          "timestamp": "2018-05-08T03:48:35Z"
        }
      ]
    },
    {
      "issueid": "DD-30",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Transition from ON GROUND to AWAITING TAKEOFF CLEARANCE",
        "description": "When a flight plan is assigned to a UAV in the ON GROUND state it transitions to the AWAITING TAKEOFF CLEARANCE state."
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2018-05-08T03:45:04Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/ManagedDrone.java",
          "timestamp": "2018-05-08T03:45:04Z"
        }
      ]
    },
    {
      "issueid": "RE-28",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "UAV Flight Plan Execution",
        "description": "The SingleUAVFlightPlanScheduler shall only execute one flight plan at a time for each UAV."
      },
      "children": {
        "refinedby": [
          "DD-556",
          "DD-557"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-27",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "UAV Flight Plan Management",
        "description": "Each UAV has zero or more pending flight plans."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/exceptions/DroneException.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/DroneFleetManager.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/FlightPlanFactory.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/IFlightPlan.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/IPlanStatusChangeListener.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPool.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPool.java",
          "timestamp": "2018-05-11T01:26:06Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/PlanPoolManager.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/FlightPlan.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/SoloDirector.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/util/DummyLockObject.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/util/ManagedHashTableList.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/util/Waypoint.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/DroneFlightStateManager.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/IManagedDroneStateChangeListener.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/PhysicalDrone.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/VirtualDrone.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/uav/IStartstrategy.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/uav/IStopStrategy.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/uav/LandingStrategy.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/info/DroneInitializationInfo.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/info/FlightInfo.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IDroneSetupRemoteService.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IFlightManagerRemoteService.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.launch/src/edu/nd/dronology/services/launch/DronologyServiceRunner.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/DroneSetupService.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/DroneSetupServiceInstance.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/IDroneSetupServiceInstance.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/DroneSetupServiceRemoteFacade.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/FlightManagerServiceRemoteFacade.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/info/RemoteInfoFactory.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/dronesimulator/DroneSimulatorServiceInstance.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightInfoCreator.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerService.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerServiceInstance.java",
          "timestamp": "2017-07-05T12:15:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/IFlightManagerServiceInstance.java",
          "timestamp": "2017-07-05T12:15:24Z"
        }
      ]
    },
    {
      "issueid": "DD-26",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Activation state is ON GROUND",
        "description": "When a UAV is initially activated on the ground it is in the ON GROUND state"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/DroneFlightStateManager.java",
          "timestamp": "2018-05-08T03:41:52Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/ManagedDrone.java",
          "timestamp": "2018-05-08T03:41:52Z"
        }
      ]
    },
    {
      "issueid": "RE-25",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "UAV Identification",
        "description": "The VehicleCore shall assign a unique ID to each activated UAV."
      },
      "children": {
        "refinedby": [
          "DD-572",
          "DD-573"
        ]
      },
      "code": []
    },
    {
      "issueid": "DD-24",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Coordinate Units",
        "description": "Altitude shall be specified in meters"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/coordinate/LlaCoordinate.java",
          "timestamp": "2018-05-07T19:20:10Z"
        }
      ]
    },
    {
      "issueid": "DD-23",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Closed",
        "summary": "Coordinate Specification",
        "description": "All waypoints shall be specified using degrees longitude and latitude using Decimal Degrees format (e.g. 38.6556758  -77.7872153)"
      },
      "children": {},
      "code": [
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/coordinate/LlaCoordinate.java",
          "timestamp": "2018-05-07T19:18:04Z"
        },
        {
          "status": "#manual-tagged",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/util/Waypoint.java",
          "timestamp": "2018-05-07T19:18:04Z"
        }
      ]
    },
    {
      "issueid": "DD-22",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Client registers for emergency events",
        "description": "A client may register with the UIMiddleware to receive notifications whenever unexpected events occur."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-21",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Client registers for UAV activation events",
        "description": "A client shall register with the UIMiddleware to receive notifications whenever UAV instances are activated or deactivated."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-20",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Client registers for flight plan events",
        "description": "A client shall register with the UIMiddleware to receive notifications whenever a new flight plan is activated or executed"
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-19",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Client registers for UAV configuration event",
        "description": "A client shall register with the UIMiddleware to receive notifications whenever a new UAV type configuration is created,  modified,  or deleted."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-18",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Client registers for UAV type specification events",
        "description": "A client shall register with the UIMiddleware to receive UAV type specification events whenever a new UAV type specification is created,  modified,  or deleted."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "DD-11",
      "attributes": {
        "issuetype": "Design Definition",
        "status": "Open",
        "summary": "Client registers for flight route events",
        "description": "A client shall register with the UIMiddleware to receive flight route event notifications whenever a flight route is created,  modified,  or deleted."
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "RE-9",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Open",
        "summary": "ListenerNotifications",
        "description": "If a client registers for notifications,  the UIMiddleware shall send notifications for specific events"
      },
      "children": {
        "refinedby": [
          "DD-11",
          "DD-18",
          "DD-19",
          "DD-20",
          "DD-21",
          "DD-22"
        ]
      },
      "code": []
    },
    {
      "issueid": "RE-8",
      "attributes": {
        "issuetype": "Requirement",
        "status": "Closed",
        "summary": "UAV State transitions",
        "description": "When requested,  the VehicleCore shall shall transition the UAV between states according to allowed state transitions as depicted in the UAV state transition diagram"
      },
      "children": {
        "refinedby": [
          "DD-26",
          "DD-30",
          "DD-31",
          "DD-32",
          "DD-33",
          "DD-500",
          "DD-578",
          "DD-579",
          "DD-580"
        ]
      },
      "code": []
    },
    {
      "issueid": "ST-347",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Route list edit and delete buttons",
        "description": "Implement the edit and delete functions for the buttons in the route list (see attached). They should behave the same (popup a window when deleting etc.) as the buttons in the route information bar."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRInfoBox.java",
          "timestamp": "2017-07-19T18:54:35Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRInfoPanel.java",
          "timestamp": "2017-07-19T15:44:26Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMainLayout.java",
          "timestamp": "2017-07-19T18:54:35Z"
        }
      ]
    },
    {
      "issueid": "ST-210",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Edit mode",
        "description": "Use the enableRouteEditing() and disableRouteEditing() methods in the MapRouteUtility class.    When the edit button is clicked,  the map and the table enter edit mode. A thicker border is shown around the map and table to indicate edit mode (see mockup). Two buttons are added on top of the map/table area: Save and Cancel.    In the edit mode,  users can create new waypoints,  move waypoints,  remove waypoints,  etc. When the edit mode is not activated , disable these editing functionalities.    Clicking the Save button will send the current waypoints data to dronology and exit the edit mode. Clicking the Cancel button will undo all changes (fetch the data from dronology again) and exit the edit mode.  "
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRInfoBox.java",
          "timestamp": "2017-06-28T20:51:42Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRInfoPanel.java",
          "timestamp": "2017-06-28T20:51:42Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMainLayout.java",
          "timestamp": "2017-06-28T20:51:42Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2017-06-28T20:51:42Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMetaInfo.java",
          "timestamp": "2017-06-26T20:51:24Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2017-06-28T20:51:42Z"
        }
      ]
    },
    {
      "issueid": "ST-497",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Resend Commands",
        "description": ""
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/IDrone.java",
          "timestamp": "2018-04-11T17:35:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/ManagedDrone.java",
          "timestamp": "2018-04-11T17:47:10Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/PhysicalDrone.java",
          "timestamp": "2018-04-11T17:47:10Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/VirtualDrone.java",
          "timestamp": "2018-04-11T17:47:10Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IDroneSetupRemoteService.java",
          "timestamp": "2018-04-11T17:35:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/DroneSetupService.java",
          "timestamp": "2018-04-11T17:35:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/DroneSetupServiceInstance.java",
          "timestamp": "2018-04-11T17:35:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/IDroneSetupServiceInstance.java",
          "timestamp": "2018-04-11T17:35:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/DroneSetupServiceRemoteFacade.java",
          "timestamp": "2018-04-11T17:35:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoBox.java",
          "timestamp": "2018-04-11T17:35:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/connector/DronologyActionExecutor.java",
          "timestamp": "2018-04-11T17:35:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/ImageProvider.java",
          "timestamp": "2018-04-11T17:35:04Z"
        }
      ]
    },
    {
      "issueid": "ST-358",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Dynamically add/remove UAVs to follow",
        "description": "In the following mode,  selecting new UAVs will add them to the group of UAVs that is currently following; unselecting UAVs will remove them from the group. Update the indicator bar accordingly as well.    When the last UAV is unselected,  zoom out to show all UAVs (i.e. perform the function same as Show all UAVs on the map)."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2017-07-21T17:24:42Z"
        }
      ]
    },
    {
      "issueid": "ST-357",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Following mode indicator",
        "description": "When the UI is following one or more UAVs,  show a thick border around the map and a UI bar on top of the map (see the attached image). Clicking on Stop Following will perform the same functionality as Show all UAVs on the map.    Refer to the FREditBar class for an implementation example."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFFollowBar.java",
          "timestamp": "2017-07-21T15:53:11Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2017-07-21T15:53:11Z"
        }
      ]
    },
    {
      "issueid": "ST-403",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Follow mode should zoom in once when follow mode initiated",
        "description": "After clicking the follow mode button,  the screen should zoom in to the drones. Then the user should be able to zoom in and out to their choosing afterwards."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMainLayout.java",
          "timestamp": "2017-07-26T14:39:45Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2017-07-26T14:39:45Z"
        }
      ]
    },
    {
      "issueid": "ST-282",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Following a UAV",
        "description": "Add a component above Emergency Operations called Map View Operations. Add two button in it called Follow Selected UAVs on Map and View All UAVs on Map. When no UAV is selected,  the button Follow Selected UAVs is disabled; once a UAV is selected,  the button is enabled.    Clicking on Follow Selected UAVs will automatically zoom and pan the map so that all selected UAVs (or rather the rectangle that bounds all selected UAVs) are always centered in the map and constitutes for about 60% of the view.    Clicking on View All UAVs will zoom and pan the map so that all UAVs and their planned routes (or rather the rectangle that bounds all UAVs and their planned routes) are centered in the map and constitutes for about 60% of the view."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoBox.java",
          "timestamp": "2017-07-05T19:39:25Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoPanel.java",
          "timestamp": "2017-07-05T19:39:25Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMainLayout.java",
          "timestamp": "2017-07-05T19:39:25Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2017-07-05T20:39:03Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapViewOperations.java",
          "timestamp": "2017-07-05T20:55:53Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/start/MyUI.java",
          "timestamp": "2017-07-05T19:39:25Z"
        }
      ]
    },
    {
      "issueid": "ST-208",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Emergency operation buttons",
        "description": "Create the emergency operation buttons specified in the mockup "
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFEmergencyComponent.java",
          "timestamp": "2017-06-15T21:00:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoBox.java",
          "timestamp": "2017-06-15T16:15:28Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoPanel.java",
          "timestamp": "2017-06-15T16:15:28Z"
        }
      ]
    },
    {
      "issueid": "ST-218",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Style: Apply styles to the emergency controls",
        "description": ""
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFEmergencyComponent.java",
          "timestamp": "2017-06-20T17:05:15Z"
        }
      ]
    },
    {
      "issueid": "ST-305",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Return to home",
        "description": "Connect the Return to home button for each UAV to Dronology. When the button is clicked,  popup a modal window saying Are you sure to send [UAV name] to its home?  with two buttons Yes and No. Clicking Yes will send the UAV to home. Clicking No will simply close the window.    For the Emergency Operations:  * When no UAV is selected,  clicking All UAVs Return to Home will popup a modal window saying Are you sure to send all UAVs to their homes? -- clicking Yes will send all UAVs to home.  * When there are selected UAVs,  change the text of the button to Selected UAVs Return to Home -- clicking it will popup a modal window saying Are you sure to send [UAV name 1]  [UAV name 2]  ...  and [UAV name n] to their homes? -- send the selected UAVs to their homes when the user clicked Yes."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFEmergencyComponent.java",
          "timestamp": "2017-07-10T15:46:25Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoBox.java",
          "timestamp": "2017-07-10T15:46:25Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoPanel.java",
          "timestamp": "2017-07-10T15:48:10Z"
        }
      ]
    },
    {
      "issueid": "ST-444",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Takeoff to altitude",
        "description": ""
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/IFlightDirector.java",
          "timestamp": "2017-12-07T16:56:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/IFlightPlan.java",
          "timestamp": "2017-12-07T16:56:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/FlightPlan.java",
          "timestamp": "2017-12-07T16:56:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/SimpleTakeoffFlightPlan.java",
          "timestamp": "2017-12-07T16:56:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/SoloDirector.java",
          "timestamp": "2017-12-07T16:56:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flightzone/FlightZoneManager2.java",
          "timestamp": "2017-12-07T16:56:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/ManagedDrone.java",
          "timestamp": "2017-12-07T16:56:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IFlightManagerRemoteService.java",
          "timestamp": "2017-12-07T16:56:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/FlightManagerServiceRemoteFacade.java",
          "timestamp": "2017-12-07T16:56:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerService.java",
          "timestamp": "2017-12-07T16:56:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerServiceInstance.java",
          "timestamp": "2017-12-07T16:56:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/IFlightManagerServiceInstance.java",
          "timestamp": "2017-12-07T16:56:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoBox.java",
          "timestamp": "2017-12-07T16:56:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/windows/TakeoffAltitudeWindow.java",
          "timestamp": "2017-12-07T16:56:09Z"
        }
      ]
    },
    {
      "issueid": "ST-247",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Differentiate past and future flight path/route",
        "description": "In the map,  the past flight path that the UAV has already covered (behind the UAV) is shown in dotted lines. The flight route that the UAV is going to cover is shown in regular lines."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2017-06-27T15:37:25Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMainLayout.java",
          "timestamp": "2017-06-27T15:18:52Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2017-06-27T15:18:52Z"
        }
      ]
    },
    {
      "issueid": "ST-304",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Change color for selected and focused UAVs",
        "description": "This only applies to the icons and lines on the map.  By default,  all UAVs use drone icon.png,  all flight route lines are in color #444.  For selected UAVs (UAVs with the checkbox checked)  use drone icon selected.png and change the line color to #000.  For the focused UAV (the UAV that the user clicks on)  use drone icon focused.png and chagne the line color to #d87703."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightInfoCreator.java",
          "timestamp": "2017-07-11T19:59:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoPanel.java",
          "timestamp": "2017-07-11T20:25:02Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2017-07-11T20:25:02Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMainLayout.java",
          "timestamp": "2017-07-11T17:46:39Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRTableDisplay.java",
          "timestamp": "2017-07-11T17:46:39Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/start/MyUI.java",
          "timestamp": "2017-07-11T19:43:34Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2017-07-11T17:46:39Z"
        }
      ]
    },
    {
      "issueid": "ST-428",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Change the focused UAV icon and path color to blue to match the color in the list ",
        "description": ""
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2017-10-27T20:08:23Z"
        }
      ]
    },
    {
      "issueid": "ST-224",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Show the UAVs on the map",
        "description": ""
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMainLayout.java",
          "timestamp": "2017-06-20T20:10:23Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2017-06-20T20:10:23Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/start/MyUI.java",
          "timestamp": "2017-06-20T20:10:23Z"
        }
      ]
    },
    {
      "issueid": "ST-280",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Automatic map scale when UI load",
        "description": "When the UI is loaded, automatically move the map so that all registered UAVs and their planned routes (or rather the rectangle that bounds all UAVs and their planned routes) are visible in the center of the map; also,  zoom the map so that all registered UAVs and their planned paths constitutes about 60% of the map."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMainLayout.java",
          "timestamp": "2017-06-28T19:16:28Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2017-06-28T19:16:28Z"
        }
      ]
    },
    {
      "issueid": "ST-221",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Refresh drone imformation from dronology to UI",
        "description": ""
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFControlsComponent.java",
          "timestamp": "2017-06-19T15:49:45Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoPanel.java",
          "timestamp": "2017-06-19T18:30:15Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMainLayout.java",
          "timestamp": "2017-06-19T15:49:45Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/start/MyUI.java",
          "timestamp": "2017-06-19T18:24:03Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/start/NavigationBar.java",
          "timestamp": "2017-06-19T15:49:45Z"
        }
      ]
    },
    {
      "issueid": "ST-217",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Style: Apply styles to the active UAV list",
        "description": ""
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoBox.java",
          "timestamp": "2017-06-16T15:18:09Z"
        }
      ]
    },
    {
      "issueid": "ST-215",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Request active UAVs from Dronology",
        "description": ""
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoBox.java",
          "timestamp": "2017-06-16T18:49:20Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoPanel.java",
          "timestamp": "2017-06-16T18:49:20Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/start/MyUI.java",
          "timestamp": "2017-06-16T18:49:20Z"
        }
      ]
    },
    {
      "issueid": "ST-346",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Deleting a route",
        "description": "When the delete button in bar on top of the route map is clicked,  popup a modal window saying Are you sure to delete the route [route name]?  including two buttons: Yes and No. When clicked Yes,  remove the route in dronology,  close the windo,and update the UI. When clicked No,  simply close the window.    When in edit mode,  the route can still be deleted. Remember to exit the edit mode before deleting the route."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMainLayout.java",
          "timestamp": "2017-07-17T18:24:21Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2017-07-17T18:24:21Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMetaInfo.java",
          "timestamp": "2017-07-17T18:24:21Z"
        }
      ]
    },
    {
      "issueid": "ST-349",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Stop managing pins and polylines separately on UI",
        "description": "LMap already manages all pins and polylines on the map. We should not manage them again.    Get rid of  private List\u003cLPolyline\u003e polylines \u003d new ArrayList\u003c\u003e();  and  private List\u003cLMarker\u003e pins \u003d new ArrayList\u003c\u003e();    Instead use map.getComponentIterator() to retrieve the pins and polylines"
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMainLayout.java",
          "timestamp": "2017-07-14T01:15:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2017-07-14T01:15:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRTableDisplay.java",
          "timestamp": "2017-07-14T01:15:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2017-07-14T01:15:04Z"
        }
      ]
    },
    {
      "issueid": "ST-169",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Create new Flight Route",
        "description": "Upon user request a new empty flight route is created:    When the “Add a New Route” button is clicked,  a modal window pops up and asks users to input the name for the new route. Two buttons are displayed on the window:    - “Cancel” to cancel adding the route  - “Draw Route” to add a new route  auto-select the route  and enter the Editing Mode."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRControlsComponent.java",
          "timestamp": "2017-07-07T20:47:10Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRInfoPanel.java",
          "timestamp": "2017-07-07T20:47:10Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMainLayout.java",
          "timestamp": "2017-07-07T21:07:49Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2017-07-07T21:07:49Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMetaInfo.java",
          "timestamp": "2017-07-07T20:47:10Z"
        }
      ]
    },
    {
      "issueid": "ST-226",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Waypoint contextual UI",
        "description": "When mouse click on the waypoint,  instead of removing it directly,  show a Window next to the waypoint that includes (1) its information (lat,  lon,  altitude,  and approaching speed) and (2) a button says remove waypoint -- clicking on the button will remove the waypoint."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMainLayout.java",
          "timestamp": "2017-07-05T19:03:21Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2017-07-05T19:03:21Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRTableDisplay.java",
          "timestamp": "2017-07-05T19:03:21Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2017-07-05T19:31:46Z"
        }
      ]
    },
    {
      "issueid": "ST-176",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Insert waypoint into flight route",
        "description": "By clicking on a line connecting 2 existing waypoints,  a new waypoint is added in between these 2 waypoints"
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2017-06-23T17:43:14Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2017-06-23T17:43:14Z"
        }
      ]
    },
    {
      "issueid": "ST-175",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Move Waypoints",
        "description": "When an existing waypoint is selected on the map it can be dragged to another location"
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2017-06-15T21:01:55Z"
        }
      ]
    },
    {
      "issueid": "ST-174",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Remove Waypoint",
        "description": "A waypoint can be removed from the route.    If the waypoint is the last in the list of waypoints the previous waypoint becomes the final waypoint.    If the waypoint is the first in the list of waypoints the next waypoint becomes the starting waypoint    If the waypoint is not the last in the list of waypoints the previous waypoint will be connected with the next waypoint.    "
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "ST-173",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Add new waypoint to flight route",
        "description": "When a user clicks on the map,  a new waypoint is created and shown on the map and in the list.    If the newly added waypoint is not the first one a line is added between the new one and the previous one."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2017-06-13T20:06:33Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMainLayout.java",
          "timestamp": "2017-06-13T20:06:33Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2017-06-13T20:06:33Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2017-06-13T20:06:33Z"
        }
      ]
    },
    {
      "issueid": "ST-233",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Add style to the flight route table",
        "description": ""
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMainLayout.java",
          "timestamp": "2017-07-16T19:46:00Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2017-07-16T19:46:00Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRTableDisplay.java",
          "timestamp": "2017-07-16T19:46:00Z"
        }
      ]
    },
    {
      "issueid": "ST-199",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Create a table (grid) view of all the waypoints added to the map",
        "description": "Put the table view below the map (for now).  This table should be synced with the map when either the table or the route on the map changed."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2017-06-14T18:45:57Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2017-06-17T02:24:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRTableDisplay.java",
          "timestamp": "2017-06-17T02:24:29Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2017-06-17T02:24:29Z"
        }
      ]
    },
    {
      "issueid": "ST-308",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Clean up the waypoint grid",
        "description": "Hide the id and reached columns. Add a column called #  which simply displays the order of the waypoint (1  2  3  ...).    "
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRTableDisplay.java",
          "timestamp": "2017-07-07T20:30:51Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/start/MyUI.java",
          "timestamp": "2017-07-07T19:56:59Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2017-07-07T19:56:59Z"
        }
      ]
    },
    {
      "issueid": "ST-227",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Remove waypoint from the table",
        "description": "Add a trashcan button to the right of each row in the table. Clicking on the button will pop-up a window showing Are you sure you want to delete this waypoint? and two buttons (Yes and No). When the user clicks on No,  window closes and nothing happens. When the user clicks on Yes,  remove the waypoint on that row from the table and remove that waypoint on the map  then close the window."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2017-06-28T21:23:17Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRTableDisplay.java",
          "timestamp": "2017-06-28T21:23:17Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2017-06-28T21:23:17Z"
        }
      ]
    },
    {
      "issueid": "ST-211",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Editing the table",
        "description": "Make the table editable."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2017-06-16T19:30:59Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRTableDisplay.java",
          "timestamp": "2017-06-16T19:30:59Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2017-06-16T19:30:59Z"
        }
      ]
    },
    {
      "issueid": "ST-373",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Route description",
        "description": "Add route description under the route name in the meta info bar.  Double clicking on the route description will change it to a textfield for editing (similar behavior as the name field)  When creating a new route  add a text area for adding the route description."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRInfoPanel.java",
          "timestamp": "2017-07-26T19:45:28Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2017-07-26T19:33:01Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMetaInfo.java",
          "timestamp": "2017-07-26T19:33:01Z"
        }
      ]
    },
    {
      "issueid": "ST-200",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Add route meta info and control above the map",
        "description": "Add a CostomComponent above the map to show the following info of the selected route (see the mockup for the layout):  * the name of the route  * the number of waypoints it has  * an edit button to activate editing  * a delete button (do not do anything for now)  * a checkbox saying Table View. When the checkbox is checked  show the table (grid) view below the map.    If no route is selected  show No route is selected in the name area and disable all controls."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMainLayout.java",
          "timestamp": "2017-06-23T20:03:49Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2017-06-23T20:03:49Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMetaInfo.java",
          "timestamp": "2017-06-23T20:03:49Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/start/MyUI.java",
          "timestamp": "2017-06-23T20:03:49Z"
        }
      ]
    },
    {
      "issueid": "ST-396",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Check input values (altitude and speed)",
        "description": "Check the user input for the altitude and speed on two places (1) the popup window for creating new waypoints and (2) the table when in edit mode. When the Save button (for the popup window) or the check mark button (for the table) is clicked  if the input altitude and/or speed are not float numbers  popup a notification saying Altitude and/or Transit speed must be a number. and do not save the input values."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRTableDisplay.java",
          "timestamp": "2017-07-26T19:08:19Z"
        }
      ]
    },
    {
      "issueid": "ST-246",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Assign new route to a UAV",
        "description": "When Assign New Route button is clicked  show a *modal window* that occupies 90% of the screen. In the window  show the FRMainLayout and two buttons beneath the FRMainLayout: Cancel and Apply.    Clicking Cancel  the user will be sent back to the active flights view.    When no route is selected  the Apply button is disabled. Once a route is selected  enable the Apply button. Clicking the Apply button will popup another modal window (confirmation window) saying Are you sure you want [UAV name] to follow the route [route name]? Clicking Yes will assign the route to the UAV and close the modal windows. Clicking No  the user will be sent back to the route planning *modal window*."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoBox.java",
          "timestamp": "2017-06-28T14:58:02Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRInfoPanel.java",
          "timestamp": "2017-06-26T14:31:21Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMainLayout.java",
          "timestamp": "2017-06-23T20:44:03Z"
        }
      ]
    },
    {
      "issueid": "ST-369",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Add style to the assign multiple routes UI",
        "description": ""
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFAssignRouteComponent.java",
          "timestamp": "2017-07-23T04:47:06Z"
        }
      ]
    },
    {
      "issueid": "ST-385",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Replace old Assign Routes UI with the new one",
        "description": ""
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoBox.java",
          "timestamp": "2017-07-24T18:01:24Z"
        }
      ]
    },
    {
      "issueid": "ST-384",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Prevent user from assigning empty routes",
        "description": "When the user attempt to assign an empty route to a UAV (by trying to put an empty route from the right side panel to the left side)  prevent the route to be assigned and popup a notification saying There is no waypoint defined in [route name]. You cannot assign an empty route to a UAV."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFAssignRouteComponent.java",
          "timestamp": "2017-07-24T18:19:26Z"
        }
      ]
    },
    {
      "issueid": "ST-281",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Automatic map scale when new route assigned",
        "description": "When a new route is assigned to a UAV  automatically move the map so that all registered UAVs and their planned routes (or rather the rectangle that bounds all UAVs and their planned routes) are visible in the center of the map; also  zoom the map so that all registered UAVs and their planned paths constitutes about 60% of the map."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2017-06-29T18:56:31Z"
        }
      ]
    },
    {
      "issueid": "ST-279",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Provide remote interface for Route assignment",
        "description": ""
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/DroneFleetManager.java",
          "timestamp": "2017-06-28T14:34:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/FlightPlanFactory.java",
          "timestamp": "2017-06-28T14:34:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/IFlightPlan.java",
          "timestamp": "2017-06-28T14:34:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/FlightPlan.java",
          "timestamp": "2017-06-28T14:34:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IFlightManagerRemoteService.java",
          "timestamp": "2017-06-28T14:34:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/FlightManagerServiceRemoteFacade.java",
          "timestamp": "2017-06-28T14:34:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerService.java",
          "timestamp": "2017-06-28T14:34:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerServiceInstance.java",
          "timestamp": "2017-06-28T14:34:04Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/IFlightManagerServiceInstance.java",
          "timestamp": "2017-06-28T14:34:04Z"
        }
      ]
    },
    {
      "issueid": "ST-228",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Select route from the list to inspect",
        "description": "When a route is clicked from the list  change its background on the list to indicate that it is selected  and then load its waypoints into the map and the table. "
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRControlsComponent.java",
          "timestamp": "2017-06-21T21:13:17Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRInfoBox.java",
          "timestamp": "2017-06-21T21:13:17Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRInfoPanel.java",
          "timestamp": "2017-06-21T21:13:17Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMainLayout.java",
          "timestamp": "2017-06-21T21:13:17Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMapComponent.java",
          "timestamp": "2017-06-21T21:13:17Z"
        }
      ]
    },
    {
      "issueid": "ST-337",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Assign routes -- move/reorder",
        "description": "Implement the move/reorder functionality specified in the mockup file. Please read the callout notes on the mockup file."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFAssignRouteComponent.java",
          "timestamp": "2017-07-19T18:26:25Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFDragLayout.java",
          "timestamp": "2017-07-19T18:28:19Z"
        }
      ]
    },
    {
      "issueid": "ST-334",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Assign routes -- layout",
        "description": "Create the assign routes layout based on the mockup file attached. Please read the callout notes on the mockup file."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFAssignRouteComponent.java",
          "timestamp": "2017-07-14T15:03:31Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoBox.java",
          "timestamp": "2017-07-14T15:03:31Z"
        }
      ]
    },
    {
      "issueid": "ST-336",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Assign routes -- select",
        "description": "Implement the select route behavior. Ignore the notes on the mockup file  but use this:    Selecting a route on the left-hand side of the list will automatically select the matching route on the right-hand side and show the route on the map.     Selecting a route on the right-hand side will NOT auto-select any route on the left-hand side."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFAssignRouteComponent.java",
          "timestamp": "2017-07-17T20:22:07Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMainLayout.java",
          "timestamp": "2017-07-17T20:22:07Z"
        }
      ]
    },
    {
      "issueid": "ST-335",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Assign routes -- assign and remove",
        "description": "Implement the assign and remove functionality based on the mockup file. Please read the callout notes on the mockup file."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFAssignRouteComponent.java",
          "timestamp": "2017-07-14T19:29:01Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoBox.java",
          "timestamp": "2017-07-14T19:29:01Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRMainLayout.java",
          "timestamp": "2017-07-14T19:29:01Z"
        }
      ]
    },
    {
      "issueid": "ST-245",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Add icons to waypoints in Active Flights view",
        "description": ""
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2017-06-28T15:23:36Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/MapMarkerUtilities.java",
          "timestamp": "2017-06-22T20:15:55Z"
        }
      ]
    },
    {
      "issueid": "ST-260",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "investigate error in haversine distance",
        "description": "To see if the haversine distance is an acceptable method for computing distance  it should be compared to travel distance and laser distance.    travel distance is the distance a drone would actually have to travel to get there (accounting for the shape of the Earth and assuming that changes in altitude would be gradual).    laser distance is the distance a laser beam would travel assuming line of sight. So it would compute this distance even when a laser would need to travel through the Earth. For example  if point A was at the North Pole and point B was at the South Pole  the laser distance would tell you the distance straight through the Earth."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/nvecsimulator/NvecInterpolator.java",
          "timestamp": "2017-06-24T08:33:25Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/simulator/nvecsimulator/NvecInterpolatorTest.java",
          "timestamp": "2017-06-24T08:33:25Z"
        }
      ]
    },
    {
      "issueid": "ST-262",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Replace existing Coordinate implementation with new LlaCoordinate",
        "description": "Replace existing Coordinate implementation with new LlaCoordinate    This requires:  * updating the flight simulator to work with double values instead of long  * UI adaptations to display coordinates correctly  * additional functionality to modify waypoints (LlaCoordinate is now immutable)"
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/AbstractDroneFleetFactory.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/PhysicalDroneFleetFactory.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/fleet/VirtualDroneFleetFactory.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/FlightPlanFactory.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/IFlightDirector.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/IFlightPlan.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/FlightPlan.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/flight/internal/SoloDirector.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/IMovementSimulator.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/SimulatorFactory.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/simplesimulator/FlightSimulator.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/simplesimulator/SimpleSimulator.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/AbstractDrone.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/IDrone.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/IDroneCommandHandler.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/ManagedDrone.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/GoToCommand.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/commands/TakeoffCommand.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/PhysicalDrone.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/vehicle/internal/VirtualDrone.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/flight manager/TestSoloDirector.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/utilities/TestCoordinates.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/base/AbstractServerService.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/info/DroneInitializationInfo.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/info/FlightPlanInfo.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/info/FlightRouteInfo.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/items/AssignedDrone.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/items/FlightRoute.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/items/IFlightRoute.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/persistence/DronologyPersistenceUtil.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services.core/src/edu/nd/dronology/services/core/remote/IFlightManagerRemoteService.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/dronesetup/DroneSetupServiceInstance.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/facades/FlightManagerServiceRemoteFacade.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/info/RemoteInfoFactory.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/dronesimulator/DroneSimulatorServiceInstance.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerService.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/FlightManagerServiceInstance.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightmanager/IFlightManagerServiceInstance.java",
          "timestamp": "2017-06-24T22:10:09Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.services/src/edu/nd/dronology/services/instances/flightroute/FlightRouteplanningServiceInstance.java",
          "timestamp": "2017-06-24T22:10:09Z"
        }
      ]
    },
    {
      "issueid": "ST-261",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Create move function ",
        "description": "This function should take two wgs-84 position one for the current position and another for the target position and the number of meters to travel. it should return a new wgs-84 position that is the specified distance away."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/nvecsimulator/NvecInterpolator.java",
          "timestamp": "2017-06-24T08:33:25Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/simulator/nvecsimulator/NvecInterpolatorTest.java",
          "timestamp": "2017-06-28T23:57:54Z"
        }
      ]
    },
    {
      "issueid": "ST-259",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Nvector to LLA needs to be robust",
        "description": "Latitude needs to be calculated using atan2. See equation 6 in http://www.navlab.net/Publications/A Nonsingular Horizontal Position Representation.pdf"
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "ST-286",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Create abstract base class for WGS-84 position classes",
        "description": "Everyone should get to work with the position class that they are most comfortable with. And to enable everyone to get the most out of the position classes  distance functions should be provided to all classes. That is what motivates this abstract base class.    The class should have these methods:    laser Distance (that takes another WGS-84 position) -\u003e returns a double  travel distance(that takes another WGS-84 position) -\u003e returns a double  toNvector() -\u003e returns an NVector  toPVector() -\u003e returns a PVector  toLlaCoordinate() -\u003e returns an LlaCoordinate  toRotMatrix() -\u003e returns a matrix that can take displacement vectors from ECEF and rotate them into NED vectors"
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/utilities/TestAbstractPosition.java",
          "timestamp": "2017-07-24T19:36:48Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/utilities/TestLlaCoordinate.java",
          "timestamp": "2017-07-24T17:20:24Z"
        }
      ]
    },
    {
      "issueid": "ST-278",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Make replacement simulator that Integrates N-vector position reckoning",
        "description": "NvecInterpolator does position reckoning in WGS-84 and a replacement simulator that uses it needs to be created     * Do movement simulator and battery simulator   * Replicate all base functionality of simple simulator "
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/src/edu/nd/dronology/core/simulator/nvecsimulator/NvecInterpolator.java",
          "timestamp": "2017-06-28T21:50:57Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/utilities/TestNVector.java",
          "timestamp": "2017-06-28T22:25:08Z"
        }
      ]
    },
    {
      "issueid": "ST-180",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "A class to hold n-vectors and altitudes",
        "description": "An N-vector is a normal Vector that points out from the surface of the WGS-84 reference ellipsoid. The normal vector is combined with an altitude which represents the distance above (or below) the reference ellipsoid (note this is the distance above sea level as sea level is defined as the surface of the ellipsoid in WGS-84).    The n-vector and altitude together precisely define a position on Earth. The n-vector should be a unit vector (i.e. a vector with a magnitude \u003d 1). The altitude should be in meters.    Why we need this:  In dead reckoning calculations we need to take a position and add a velocity vector to it. Drones often stay at constant elevations as they travel around the Earth. This is a problem when using p-vectors and velocity vectors. The instantaneous velocity is tangent to the reference ellipsoid and thus follows the curvature of the Earth. In aviation it is common to use n-vectors because there is a nice formula that addresses this exact problem. This also makes programming easier when considering edge cases like a drone flying east near the meridian where longitude \u003d 180 degrees. Using latitude and longitude for this calculation requires special logic to handle the transition to longitude \u003d -179.9999... degrees but no special logic is required when using n-vectors. N-vectors also handle gracefully the poles where longitude is undefined. For more information about n-vectors see [this article|http://www.navlab.net/Publications/A Nonsingular Horizontal Position Representation.pdf]      The following instance fields are needed in the nvector class:  * x - the x component of the n-vector  * y - the y component of the n-vector  * z - the z component of the n-vector  * altitude - the distance above sea level in meters    The following methods are needed in the n-vector class:  * toLla - takes no arguments and maps the n-vector and altitude to a latitude  longitude and altitude.  * toPvec - takes no arguments and maps the n-vector and altitude to an X  Y  and Z coordinate in the WGS-84 reference frame.  "
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/utilities/TestLlaCoordinate.java",
          "timestamp": "2017-06-11T20:46:43Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/utilities/TestNVector.java",
          "timestamp": "2017-06-15T22:48:27Z"
        }
      ]
    },
    {
      "issueid": "ST-178",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "A class to hold latitude  longitude  and altitude (LLA) coordinates",
        "description": "We need an immutable class holding three doubles for latitude  longitude  and altitude (LLA).  This class should have the following data members:  * latitude - the angle north of the equator in degrees (negative angles define latitudes in the southern hemisphere)   * longitude - the angle east of the prime meridian in degrees (negative angles define longitudes in the western hemisphere)   * altitude - the distance above sea level or more precisely the distance above the surface of the WGS-84 reference ellipsoid. For this project we need this distance in meters (though traditionally  in aviation this distance is measured in feet so be careful when using this class)    This class should have the following methods  * toPvec - takes no arguments and maps LLA to an X  Y  and Z coordinate in the WGS-84 reference frame.  * toNvec - takes no arguments and maps LLA to a coordinate defined by an N-vector plus altitude. An N-vector is a normal vector on the surface of the WGS-84 reference ellipsoid. This ellipsoid defines the position of sea level everywhere on Earth. By pairing this with an altitude  we can precisely define a position. N-vectors have nice properties that make dead reckoning easier and more accurate (Dead reckoning is the process of calculating a drones current position by using a previously determined position  and advancing that position based upon known or estimated speeds over elapsed time and course. See https://en.wikipedia.org/wiki/Dead reckoning for more info). To learn more about the nice properties that n-vectors have  see this article http://www.navlab.net/Publications/A Nonsingular Horizontal Position Representation.pdf from The Journal of Navigation.     Perhaps Coordinate.java may be modified into the LlaCoordinate class we need."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/utilities/TestLlaCoordinate.java",
          "timestamp": "2017-06-11T20:46:43Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/utilities/TestNVector.java",
          "timestamp": "2017-06-11T20:46:43Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/utilities/TestPVector.java",
          "timestamp": "2017-06-11T23:37:32Z"
        }
      ]
    },
    {
      "issueid": "ST-179",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "A class to hold p-vectors (X  Y  and Z coordinates in the WGS-84 ref. frame)",
        "description": "We need an immutable class holding three doubles for X  Y  and Z in the WGS-84 reference frame.    Here is some background information about the WGS-84 reference frame:    * The origin of this frame is at the center of mass of the Earth  * The X-axis points towards where the equator meets the prime meridean (latitude 0  longitude 0)  * The Z-axis points towards the geographic north pole (latitude 90  longitude undefined)  * The Y-axis can be derived using right hand rule and points towards latitude 0  longitude 90    This class should have the following instance fields:  * x - the position along the X-axis in meters  * y - the position along the Y-axis in meters  * z - the position along the Z-axis in meters    This class should have the following methods:  * toLla - takes no arguments and returns the latitude  longitude  and altitude for this position  * toNvec - takes no arguments and returns the n-vector plus altitude for this position"
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/utilities/TestCoordinates.java",
          "timestamp": "2017-06-15T06:40:14Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/utilities/TestLlaCoordinate.java",
          "timestamp": "2017-06-11T20:46:43Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/utilities/TestNVector.java",
          "timestamp": "2017-06-15T06:40:14Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.core/test/edu/nd/dronology/core/utilities/TestPVector.java",
          "timestamp": "2017-06-15T19:56:23Z"
        }
      ]
    },
    {
      "issueid": "ST-216",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Request existing routes from Dronology",
        "description": ""
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRInfoBox.java",
          "timestamp": "2017-06-19T20:21:34Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRInfoPanel.java",
          "timestamp": "2017-06-19T20:21:34Z"
        }
      ]
    },
    {
      "issueid": "ST-219",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Style: Apply styles to the routes list",
        "description": ""
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFInfoBox.java",
          "timestamp": "2017-06-20T02:34:17Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRInfoBox.java",
          "timestamp": "2017-06-20T02:34:17Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/flightroutes/FRInfoPanel.java",
          "timestamp": "2017-06-20T02:34:17Z"
        }
      ]
    },
    {
      "issueid": "ST-132",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Create an UI configuration singleton",
        "description": "Follow the example on https://gist.github.com/kimmellj/bd97790d66c5fd1408e0 and create a singleton class for all UI parameters. Search for Java Singleton for other singleton examples.    The current parameters include: project name  map center lan  map center lon  and map default zoom.    In the future  we will use this class for configurable parameters."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/Configuration.java",
          "timestamp": "2017-06-13T18:05:39Z"
        }
      ]
    },
    {
      "issueid": "ST-232",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Make the UI refreshing rate configurable",
        "description": "Currently  the UI refreshing rate to update drone info is hard-coded as once per 1000ms. Create a field in the configuration file and make it configurable."
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/activeflights/AFMapComponent.java",
          "timestamp": "2017-06-21T14:30:58Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/start/MyUI.java",
          "timestamp": "2017-06-21T14:30:58Z"
        },
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/Configuration.java",
          "timestamp": "2017-06-21T14:30:58Z"
        }
      ]
    },
    {
      "issueid": "ST-182",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Design: Incorporate altitude info of flight routes in the Active Flights UI",
        "description": ""
      },
      "children": {},
      "code": []
    },
    {
      "issueid": "ST-186",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Load the default center coordinates from the configuration file",
        "description": ""
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/Configuration.java",
          "timestamp": "2017-06-13T13:40:20Z"
        }
      ]
    },
    {
      "issueid": "ST-185",
      "attributes": {
        "issuetype": "Sub-task",
        "status": "Closed",
        "summary": "Load the default zoom level from the configuration file",
        "description": ""
      },
      "children": {},
      "code": [
        {
          "status": "#github",
          "filename": "edu.nd.dronology.ui.vaadin/src/main/java/edu/nd/dronology/ui/vaadin/utils/Configuration.java",
          "timestamp": "2017-06-13T13:40:20Z"
        }
      ]
    }
  ]
}
